/*
 * generated by Xtext 2.14.0
 */
package ac.soton.xeventb.camillex.formatting2

import ac.soton.xeventb.camillex.services.EventBComponentGrammarAccess
import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.eventb.emf.core.machine.Event
import org.eventb.emf.core.machine.Machine

class EventBComponentFormatter extends AbstractFormatter2 {
	
	@Inject extension EventBComponentGrammarAccess

	def dispatch void format(Machine machine, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (abstractExtension : machine.extensions) {
			abstractExtension.format
		}
		for (variable : machine.variables) {
			variable.format
		}
		for (invariant : machine.invariants) {
			invariant.format
		}
		machine.variant.format
		for (event : machine.events) {
			event.format
		}
	}

	def dispatch void format(Event event, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (abstractExtension : event.extensions) {
			abstractExtension.format
		}
		for (witness : event.witnesses) {
			witness.format
		}
		for (action : event.actions) {
			action.format
		}
		for (guard : event.guards) {
			guard.format
		}
		for (parameter : event.parameters) {
			parameter.format
		}
	}
	
	// TODO: implement for Context
}
