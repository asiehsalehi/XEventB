/*
 * generated by Xtext 2.10.0
 */
package ac.soton.eventb.xtext.machine.ide.contentassist.antlr;

import ac.soton.eventb.xtext.machine.ide.contentassist.antlr.internal.InternalXMachineParser;
import ac.soton.eventb.xtext.machine.services.XMachineGrammarAccess;
import com.google.inject.Inject;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

public class XMachineParser extends AbstractContentAssistParser {

	@Inject
	private XMachineGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalXMachineParser createParser() {
		InternalXMachineParser result = new InternalXMachineParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getXMachineAccess().getCommentAlternatives_1_0(), "rule__XMachine__CommentAlternatives_1_0");
					put(grammarAccess.getXMachine2Access().getCommentAlternatives_1_0(), "rule__XMachine2__CommentAlternatives_1_0");
					put(grammarAccess.getXVariableAccess().getAlternatives(), "rule__XVariable__Alternatives");
					put(grammarAccess.getXInvariantAccess().getAlternatives(), "rule__XInvariant__Alternatives");
					put(grammarAccess.getXVariantAccess().getAlternatives(), "rule__XVariant__Alternatives");
					put(grammarAccess.getXParameterAccess().getAlternatives(), "rule__XParameter__Alternatives");
					put(grammarAccess.getXGuardAccess().getAlternatives(), "rule__XGuard__Alternatives");
					put(grammarAccess.getXWitnessAccess().getAlternatives(), "rule__XWitness__Alternatives");
					put(grammarAccess.getXActionAccess().getAlternatives(), "rule__XAction__Alternatives");
					put(grammarAccess.getXConvergenceAccess().getAlternatives(), "rule__XConvergence__Alternatives");
					put(grammarAccess.getXMachineAccess().getGroup(), "rule__XMachine__Group__0");
					put(grammarAccess.getXMachineAccess().getGroup_2(), "rule__XMachine__Group_2__0");
					put(grammarAccess.getXMachineAccess().getGroup_5(), "rule__XMachine__Group_5__0");
					put(grammarAccess.getXMachineAccess().getGroup_6(), "rule__XMachine__Group_6__0");
					put(grammarAccess.getXMachineAccess().getGroup_7(), "rule__XMachine__Group_7__0");
					put(grammarAccess.getXMachineAccess().getGroup_8(), "rule__XMachine__Group_8__0");
					put(grammarAccess.getXMachine2Access().getGroup(), "rule__XMachine2__Group__0");
					put(grammarAccess.getXMachine2Access().getGroup_4(), "rule__XMachine2__Group_4__0");
					put(grammarAccess.getXMachine2Access().getGroup_5(), "rule__XMachine2__Group_5__0");
					put(grammarAccess.getXMachine2Access().getGroup_6(), "rule__XMachine2__Group_6__0");
					put(grammarAccess.getXMachine2Access().getGroup_7(), "rule__XMachine2__Group_7__0");
					put(grammarAccess.getXMachine2Access().getGroup_8(), "rule__XMachine2__Group_8__0");
					put(grammarAccess.getXVariableNoCommentAccess().getGroup(), "rule__XVariableNoComment__Group__0");
					put(grammarAccess.getXVariableMLCommentAccess().getGroup(), "rule__XVariableMLComment__Group__0");
					put(grammarAccess.getXVariableSLCommentAccess().getGroup(), "rule__XVariableSLComment__Group__0");
					put(grammarAccess.getXInvariantNoCommentAccess().getGroup(), "rule__XInvariantNoComment__Group__0");
					put(grammarAccess.getXInvariantMLCommentAccess().getGroup(), "rule__XInvariantMLComment__Group__0");
					put(grammarAccess.getXInvariantSLCommentAccess().getGroup(), "rule__XInvariantSLComment__Group__0");
					put(grammarAccess.getXVariantNoCommentAccess().getGroup(), "rule__XVariantNoComment__Group__0");
					put(grammarAccess.getXVariantMLCommentAccess().getGroup(), "rule__XVariantMLComment__Group__0");
					put(grammarAccess.getXVariantSLCommentAccess().getGroup(), "rule__XVariantSLComment__Group__0");
					put(grammarAccess.getXParameterNoCommentAccess().getGroup(), "rule__XParameterNoComment__Group__0");
					put(grammarAccess.getXParameterMLCommentAccess().getGroup(), "rule__XParameterMLComment__Group__0");
					put(grammarAccess.getXParameterSLCommentAccess().getGroup(), "rule__XParameterSLComment__Group__0");
					put(grammarAccess.getXGuardNoCommentAccess().getGroup(), "rule__XGuardNoComment__Group__0");
					put(grammarAccess.getXGuardMLCommentAccess().getGroup(), "rule__XGuardMLComment__Group__0");
					put(grammarAccess.getXGuardSLCommentAccess().getGroup(), "rule__XGuardSLComment__Group__0");
					put(grammarAccess.getXWitnessNoCommentAccess().getGroup(), "rule__XWitnessNoComment__Group__0");
					put(grammarAccess.getXWitnessMLCommentAccess().getGroup(), "rule__XWitnessMLComment__Group__0");
					put(grammarAccess.getXWitnessSLCommentAccess().getGroup(), "rule__XWitnessSLComment__Group__0");
					put(grammarAccess.getXActionNoCommentAccess().getGroup(), "rule__XActionNoComment__Group__0");
					put(grammarAccess.getXActionMLCommentAccess().getGroup(), "rule__XActionMLComment__Group__0");
					put(grammarAccess.getXActionSLCommentAccess().getGroup(), "rule__XActionSLComment__Group__0");
					put(grammarAccess.getXMachineAccess().getCommentAssignment_1(), "rule__XMachine__CommentAssignment_1");
					put(grammarAccess.getXMachineAccess().getExtensionIdAssignment_2_1(), "rule__XMachine__ExtensionIdAssignment_2_1");
					put(grammarAccess.getXMachineAccess().getNameAssignment_4(), "rule__XMachine__NameAssignment_4");
					put(grammarAccess.getXMachineAccess().getRefinesAssignment_5_1(), "rule__XMachine__RefinesAssignment_5_1");
					put(grammarAccess.getXMachineAccess().getAbstractMachineAssignment_6_1(), "rule__XMachine__AbstractMachineAssignment_6_1");
					put(grammarAccess.getXMachineAccess().getConcreteMachineAssignment_7_1(), "rule__XMachine__ConcreteMachineAssignment_7_1");
					put(grammarAccess.getXMachineAccess().getPrefixesAssignment_8_1(), "rule__XMachine__PrefixesAssignment_8_1");
					put(grammarAccess.getXMachineAccess().getPrefixesAssignment_8_2(), "rule__XMachine__PrefixesAssignment_8_2");
					put(grammarAccess.getXMachine2Access().getCommentAssignment_1(), "rule__XMachine2__CommentAssignment_1");
					put(grammarAccess.getXMachine2Access().getNameAssignment_3(), "rule__XMachine2__NameAssignment_3");
					put(grammarAccess.getXMachine2Access().getRefinesAssignment_4_1(), "rule__XMachine2__RefinesAssignment_4_1");
					put(grammarAccess.getXMachine2Access().getSeesAssignment_5_1(), "rule__XMachine2__SeesAssignment_5_1");
					put(grammarAccess.getXMachine2Access().getVariablesAssignment_6_1(), "rule__XMachine2__VariablesAssignment_6_1");
					put(grammarAccess.getXMachine2Access().getInvariantsAssignment_7_1(), "rule__XMachine2__InvariantsAssignment_7_1");
					put(grammarAccess.getXMachine2Access().getVariantAssignment_8_1(), "rule__XMachine2__VariantAssignment_8_1");
					put(grammarAccess.getXVariableNoCommentAccess().getNameAssignment_1(), "rule__XVariableNoComment__NameAssignment_1");
					put(grammarAccess.getXVariableMLCommentAccess().getCommentAssignment_1(), "rule__XVariableMLComment__CommentAssignment_1");
					put(grammarAccess.getXVariableMLCommentAccess().getNameAssignment_2(), "rule__XVariableMLComment__NameAssignment_2");
					put(grammarAccess.getXVariableSLCommentAccess().getNameAssignment_1(), "rule__XVariableSLComment__NameAssignment_1");
					put(grammarAccess.getXVariableSLCommentAccess().getCommentAssignment_2(), "rule__XVariableSLComment__CommentAssignment_2");
					put(grammarAccess.getXInvariantNoCommentAccess().getNameAssignment_1(), "rule__XInvariantNoComment__NameAssignment_1");
					put(grammarAccess.getXInvariantNoCommentAccess().getPredicateAssignment_2(), "rule__XInvariantNoComment__PredicateAssignment_2");
					put(grammarAccess.getXInvariantNoCommentAccess().getTheoremAssignment_3(), "rule__XInvariantNoComment__TheoremAssignment_3");
					put(grammarAccess.getXInvariantMLCommentAccess().getCommentAssignment_1(), "rule__XInvariantMLComment__CommentAssignment_1");
					put(grammarAccess.getXInvariantMLCommentAccess().getNameAssignment_2(), "rule__XInvariantMLComment__NameAssignment_2");
					put(grammarAccess.getXInvariantMLCommentAccess().getPredicateAssignment_3(), "rule__XInvariantMLComment__PredicateAssignment_3");
					put(grammarAccess.getXInvariantMLCommentAccess().getTheoremAssignment_4(), "rule__XInvariantMLComment__TheoremAssignment_4");
					put(grammarAccess.getXInvariantSLCommentAccess().getNameAssignment_1(), "rule__XInvariantSLComment__NameAssignment_1");
					put(grammarAccess.getXInvariantSLCommentAccess().getPredicateAssignment_2(), "rule__XInvariantSLComment__PredicateAssignment_2");
					put(grammarAccess.getXInvariantSLCommentAccess().getTheoremAssignment_3(), "rule__XInvariantSLComment__TheoremAssignment_3");
					put(grammarAccess.getXInvariantSLCommentAccess().getCommentAssignment_4(), "rule__XInvariantSLComment__CommentAssignment_4");
					put(grammarAccess.getXVariantNoCommentAccess().getExpressionAssignment_1(), "rule__XVariantNoComment__ExpressionAssignment_1");
					put(grammarAccess.getXVariantMLCommentAccess().getCommentAssignment_1(), "rule__XVariantMLComment__CommentAssignment_1");
					put(grammarAccess.getXVariantMLCommentAccess().getExpressionAssignment_2(), "rule__XVariantMLComment__ExpressionAssignment_2");
					put(grammarAccess.getXVariantSLCommentAccess().getExpressionAssignment_1(), "rule__XVariantSLComment__ExpressionAssignment_1");
					put(grammarAccess.getXVariantSLCommentAccess().getCommentAssignment_2(), "rule__XVariantSLComment__CommentAssignment_2");
					put(grammarAccess.getXParameterNoCommentAccess().getNameAssignment_1(), "rule__XParameterNoComment__NameAssignment_1");
					put(grammarAccess.getXParameterMLCommentAccess().getCommentAssignment_1(), "rule__XParameterMLComment__CommentAssignment_1");
					put(grammarAccess.getXParameterMLCommentAccess().getNameAssignment_2(), "rule__XParameterMLComment__NameAssignment_2");
					put(grammarAccess.getXParameterSLCommentAccess().getNameAssignment_1(), "rule__XParameterSLComment__NameAssignment_1");
					put(grammarAccess.getXParameterSLCommentAccess().getCommentAssignment_2(), "rule__XParameterSLComment__CommentAssignment_2");
					put(grammarAccess.getXGuardNoCommentAccess().getNameAssignment_1(), "rule__XGuardNoComment__NameAssignment_1");
					put(grammarAccess.getXGuardNoCommentAccess().getPredicateAssignment_2(), "rule__XGuardNoComment__PredicateAssignment_2");
					put(grammarAccess.getXGuardNoCommentAccess().getTheoremAssignment_3(), "rule__XGuardNoComment__TheoremAssignment_3");
					put(grammarAccess.getXGuardMLCommentAccess().getCommentAssignment_1(), "rule__XGuardMLComment__CommentAssignment_1");
					put(grammarAccess.getXGuardMLCommentAccess().getNameAssignment_2(), "rule__XGuardMLComment__NameAssignment_2");
					put(grammarAccess.getXGuardMLCommentAccess().getPredicateAssignment_3(), "rule__XGuardMLComment__PredicateAssignment_3");
					put(grammarAccess.getXGuardMLCommentAccess().getTheoremAssignment_4(), "rule__XGuardMLComment__TheoremAssignment_4");
					put(grammarAccess.getXGuardSLCommentAccess().getNameAssignment_1(), "rule__XGuardSLComment__NameAssignment_1");
					put(grammarAccess.getXGuardSLCommentAccess().getPredicateAssignment_2(), "rule__XGuardSLComment__PredicateAssignment_2");
					put(grammarAccess.getXGuardSLCommentAccess().getTheoremAssignment_3(), "rule__XGuardSLComment__TheoremAssignment_3");
					put(grammarAccess.getXGuardSLCommentAccess().getCommentAssignment_4(), "rule__XGuardSLComment__CommentAssignment_4");
					put(grammarAccess.getXWitnessNoCommentAccess().getNameAssignment_1(), "rule__XWitnessNoComment__NameAssignment_1");
					put(grammarAccess.getXWitnessNoCommentAccess().getPredicateAssignment_2(), "rule__XWitnessNoComment__PredicateAssignment_2");
					put(grammarAccess.getXWitnessMLCommentAccess().getCommentAssignment_1(), "rule__XWitnessMLComment__CommentAssignment_1");
					put(grammarAccess.getXWitnessMLCommentAccess().getNameAssignment_2(), "rule__XWitnessMLComment__NameAssignment_2");
					put(grammarAccess.getXWitnessMLCommentAccess().getPredicateAssignment_3(), "rule__XWitnessMLComment__PredicateAssignment_3");
					put(grammarAccess.getXWitnessSLCommentAccess().getNameAssignment_1(), "rule__XWitnessSLComment__NameAssignment_1");
					put(grammarAccess.getXWitnessSLCommentAccess().getPredicateAssignment_2(), "rule__XWitnessSLComment__PredicateAssignment_2");
					put(grammarAccess.getXWitnessSLCommentAccess().getCommentAssignment_3(), "rule__XWitnessSLComment__CommentAssignment_3");
					put(grammarAccess.getXActionNoCommentAccess().getNameAssignment_1(), "rule__XActionNoComment__NameAssignment_1");
					put(grammarAccess.getXActionNoCommentAccess().getActionAssignment_2(), "rule__XActionNoComment__ActionAssignment_2");
					put(grammarAccess.getXActionMLCommentAccess().getCommentAssignment_1(), "rule__XActionMLComment__CommentAssignment_1");
					put(grammarAccess.getXActionMLCommentAccess().getNameAssignment_2(), "rule__XActionMLComment__NameAssignment_2");
					put(grammarAccess.getXActionMLCommentAccess().getActionAssignment_3(), "rule__XActionMLComment__ActionAssignment_3");
					put(grammarAccess.getXActionSLCommentAccess().getNameAssignment_1(), "rule__XActionSLComment__NameAssignment_1");
					put(grammarAccess.getXActionSLCommentAccess().getActionAssignment_2(), "rule__XActionSLComment__ActionAssignment_2");
					put(grammarAccess.getXActionSLCommentAccess().getCommentAssignment_3(), "rule__XActionSLComment__CommentAssignment_3");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalXMachineParser typedParser = (InternalXMachineParser) parser;
			typedParser.entryRuleXMachine();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS" };
	}

	public XMachineGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(XMachineGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
