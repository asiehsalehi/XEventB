/*
 * generated by Xtext 2.10.0
 */
package ac.soton.eventb.xtext.machine.ide.contentassist.antlr;

import ac.soton.eventb.xtext.machine.ide.contentassist.antlr.internal.InternalXMachineParser;
import ac.soton.eventb.xtext.machine.services.XMachineGrammarAccess;
import com.google.inject.Inject;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

public class XMachineParser extends AbstractContentAssistParser {

	@Inject
	private XMachineGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalXMachineParser createParser() {
		InternalXMachineParser result = new InternalXMachineParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getXMachineAccess().getCommentAlternatives_1_0(), "rule__XMachine__CommentAlternatives_1_0");
					put(grammarAccess.getXVariableAccess().getCommentAlternatives_1_0(), "rule__XVariable__CommentAlternatives_1_0");
					put(grammarAccess.getXInvariantAccess().getCommentAlternatives_1_0(), "rule__XInvariant__CommentAlternatives_1_0");
					put(grammarAccess.getXVariantAccess().getCommentAlternatives_1_0(), "rule__XVariant__CommentAlternatives_1_0");
					put(grammarAccess.getXEventAccess().getCommentAlternatives_1_0(), "rule__XEvent__CommentAlternatives_1_0");
					put(grammarAccess.getXEventAccess().getAlternatives_5(), "rule__XEvent__Alternatives_5");
					put(grammarAccess.getXParameterAccess().getCommentAlternatives_1_0(), "rule__XParameter__CommentAlternatives_1_0");
					put(grammarAccess.getXGuardAccess().getCommentAlternatives_1_0(), "rule__XGuard__CommentAlternatives_1_0");
					put(grammarAccess.getXWitnessAccess().getCommentAlternatives_1_0(), "rule__XWitness__CommentAlternatives_1_0");
					put(grammarAccess.getXActionAccess().getCommentAlternatives_1_0(), "rule__XAction__CommentAlternatives_1_0");
					put(grammarAccess.getXConvergenceAccess().getAlternatives(), "rule__XConvergence__Alternatives");
					put(grammarAccess.getXMachineAccess().getGroup(), "rule__XMachine__Group__0");
					put(grammarAccess.getXMachineAccess().getGroup_4(), "rule__XMachine__Group_4__0");
					put(grammarAccess.getXMachineAccess().getGroup_5(), "rule__XMachine__Group_5__0");
					put(grammarAccess.getXMachineAccess().getGroup_6(), "rule__XMachine__Group_6__0");
					put(grammarAccess.getXMachineAccess().getGroup_7(), "rule__XMachine__Group_7__0");
					put(grammarAccess.getXMachineAccess().getGroup_8(), "rule__XMachine__Group_8__0");
					put(grammarAccess.getXMachineAccess().getGroup_9(), "rule__XMachine__Group_9__0");
					put(grammarAccess.getXMachineAccess().getGroup_9_2(), "rule__XMachine__Group_9_2__0");
					put(grammarAccess.getXVariableAccess().getGroup(), "rule__XVariable__Group__0");
					put(grammarAccess.getXInvariantAccess().getGroup(), "rule__XInvariant__Group__0");
					put(grammarAccess.getXVariantAccess().getGroup(), "rule__XVariant__Group__0");
					put(grammarAccess.getXEventAccess().getGroup(), "rule__XEvent__Group__0");
					put(grammarAccess.getXEventAccess().getGroup_4(), "rule__XEvent__Group_4__0");
					put(grammarAccess.getXEventAccess().getGroup_5_0(), "rule__XEvent__Group_5_0__0");
					put(grammarAccess.getXEventAccess().getGroup_5_0_0(), "rule__XEvent__Group_5_0_0__0");
					put(grammarAccess.getXEventAccess().getGroup_5_1(), "rule__XEvent__Group_5_1__0");
					put(grammarAccess.getXEventAccess().getGroup_5_1_2(), "rule__XEvent__Group_5_1_2__0");
					put(grammarAccess.getXEventAccess().getGroup_5_1_3(), "rule__XEvent__Group_5_1_3__0");
					put(grammarAccess.getXEventAccess().getGroup_5_2(), "rule__XEvent__Group_5_2__0");
					put(grammarAccess.getXEventAccess().getGroup_5_2_4(), "rule__XEvent__Group_5_2_4__0");
					put(grammarAccess.getXEventAccess().getGroup_5_2_5(), "rule__XEvent__Group_5_2_5__0");
					put(grammarAccess.getXParameterAccess().getGroup(), "rule__XParameter__Group__0");
					put(grammarAccess.getXGuardAccess().getGroup(), "rule__XGuard__Group__0");
					put(grammarAccess.getXWitnessAccess().getGroup(), "rule__XWitness__Group__0");
					put(grammarAccess.getXActionAccess().getGroup(), "rule__XAction__Group__0");
					put(grammarAccess.getXMachineAccess().getCommentAssignment_1(), "rule__XMachine__CommentAssignment_1");
					put(grammarAccess.getXMachineAccess().getNameAssignment_3(), "rule__XMachine__NameAssignment_3");
					put(grammarAccess.getXMachineAccess().getRefinesAssignment_4_1(), "rule__XMachine__RefinesAssignment_4_1");
					put(grammarAccess.getXMachineAccess().getSeesAssignment_5_1(), "rule__XMachine__SeesAssignment_5_1");
					put(grammarAccess.getXMachineAccess().getVariablesAssignment_6_1(), "rule__XMachine__VariablesAssignment_6_1");
					put(grammarAccess.getXMachineAccess().getInvariantsAssignment_7_1(), "rule__XMachine__InvariantsAssignment_7_1");
					put(grammarAccess.getXMachineAccess().getVariantAssignment_8_1(), "rule__XMachine__VariantAssignment_8_1");
					put(grammarAccess.getXMachineAccess().getEventsAssignment_9_1(), "rule__XMachine__EventsAssignment_9_1");
					put(grammarAccess.getXMachineAccess().getEventsAssignment_9_2_1(), "rule__XMachine__EventsAssignment_9_2_1");
					put(grammarAccess.getXVariableAccess().getCommentAssignment_1(), "rule__XVariable__CommentAssignment_1");
					put(grammarAccess.getXVariableAccess().getNameAssignment_2(), "rule__XVariable__NameAssignment_2");
					put(grammarAccess.getXInvariantAccess().getCommentAssignment_1(), "rule__XInvariant__CommentAssignment_1");
					put(grammarAccess.getXInvariantAccess().getNameAssignment_2(), "rule__XInvariant__NameAssignment_2");
					put(grammarAccess.getXInvariantAccess().getPredicateAssignment_3(), "rule__XInvariant__PredicateAssignment_3");
					put(grammarAccess.getXInvariantAccess().getTheoremAssignment_4(), "rule__XInvariant__TheoremAssignment_4");
					put(grammarAccess.getXVariantAccess().getCommentAssignment_1(), "rule__XVariant__CommentAssignment_1");
					put(grammarAccess.getXVariantAccess().getExpressionAssignment_2(), "rule__XVariant__ExpressionAssignment_2");
					put(grammarAccess.getXEventAccess().getCommentAssignment_1(), "rule__XEvent__CommentAssignment_1");
					put(grammarAccess.getXEventAccess().getNameAssignment_2(), "rule__XEvent__NameAssignment_2");
					put(grammarAccess.getXEventAccess().getExtendedAssignment_3_0(), "rule__XEvent__ExtendedAssignment_3_0");
					put(grammarAccess.getXEventAccess().getConvergenceAssignment_3_1(), "rule__XEvent__ConvergenceAssignment_3_1");
					put(grammarAccess.getXEventAccess().getRefinesAssignment_4_1(), "rule__XEvent__RefinesAssignment_4_1");
					put(grammarAccess.getXEventAccess().getWitnessesAssignment_5_0_0_1(), "rule__XEvent__WitnessesAssignment_5_0_0_1");
					put(grammarAccess.getXEventAccess().getActionsAssignment_5_0_2(), "rule__XEvent__ActionsAssignment_5_0_2");
					put(grammarAccess.getXEventAccess().getGuardsAssignment_5_1_1(), "rule__XEvent__GuardsAssignment_5_1_1");
					put(grammarAccess.getXEventAccess().getWitnessesAssignment_5_1_2_1(), "rule__XEvent__WitnessesAssignment_5_1_2_1");
					put(grammarAccess.getXEventAccess().getActionsAssignment_5_1_3_1(), "rule__XEvent__ActionsAssignment_5_1_3_1");
					put(grammarAccess.getXEventAccess().getParametersAssignment_5_2_1(), "rule__XEvent__ParametersAssignment_5_2_1");
					put(grammarAccess.getXEventAccess().getGuardsAssignment_5_2_3(), "rule__XEvent__GuardsAssignment_5_2_3");
					put(grammarAccess.getXEventAccess().getWitnessesAssignment_5_2_4_1(), "rule__XEvent__WitnessesAssignment_5_2_4_1");
					put(grammarAccess.getXEventAccess().getActionsAssignment_5_2_5_1(), "rule__XEvent__ActionsAssignment_5_2_5_1");
					put(grammarAccess.getXParameterAccess().getCommentAssignment_1(), "rule__XParameter__CommentAssignment_1");
					put(grammarAccess.getXParameterAccess().getNameAssignment_2(), "rule__XParameter__NameAssignment_2");
					put(grammarAccess.getXGuardAccess().getCommentAssignment_1(), "rule__XGuard__CommentAssignment_1");
					put(grammarAccess.getXGuardAccess().getNameAssignment_2(), "rule__XGuard__NameAssignment_2");
					put(grammarAccess.getXGuardAccess().getPredicateAssignment_3(), "rule__XGuard__PredicateAssignment_3");
					put(grammarAccess.getXGuardAccess().getTheoremAssignment_4(), "rule__XGuard__TheoremAssignment_4");
					put(grammarAccess.getXWitnessAccess().getCommentAssignment_1(), "rule__XWitness__CommentAssignment_1");
					put(grammarAccess.getXWitnessAccess().getNameAssignment_2(), "rule__XWitness__NameAssignment_2");
					put(grammarAccess.getXWitnessAccess().getPredicateAssignment_3(), "rule__XWitness__PredicateAssignment_3");
					put(grammarAccess.getXActionAccess().getCommentAssignment_1(), "rule__XAction__CommentAssignment_1");
					put(grammarAccess.getXActionAccess().getNameAssignment_2(), "rule__XAction__NameAssignment_2");
					put(grammarAccess.getXActionAccess().getActionAssignment_3(), "rule__XAction__ActionAssignment_3");
					put(grammarAccess.getXEventAccess().getUnorderedGroup_3(), "rule__XEvent__UnorderedGroup_3");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalXMachineParser typedParser = (InternalXMachineParser) parser;
			typedParser.entryRuleXMachine();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS" };
	}

	public XMachineGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(XMachineGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
