/*
 * generated by Xtext 2.10.0
 */
grammar InternalXMachine;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package ac.soton.eventb.xtext.machine.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package ac.soton.eventb.xtext.machine.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import ac.soton.eventb.xtext.machine.services.XMachineGrammarAccess;

}
@parser::members {
	private XMachineGrammarAccess grammarAccess;

	public void setGrammarAccess(XMachineGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleXMachine
entryRuleXMachine
:
{ before(grammarAccess.getXMachineRule()); }
	 ruleXMachine
{ after(grammarAccess.getXMachineRule()); } 
	 EOF 
;

// Rule XMachine
ruleXMachine 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXMachineAccess().getGroup()); }
		(rule__XMachine__Group__0)
		{ after(grammarAccess.getXMachineAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXVariable
entryRuleXVariable
:
{ before(grammarAccess.getXVariableRule()); }
	 ruleXVariable
{ after(grammarAccess.getXVariableRule()); } 
	 EOF 
;

// Rule XVariable
ruleXVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXVariableAccess().getAlternatives()); }
		(rule__XVariable__Alternatives)
		{ after(grammarAccess.getXVariableAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXVariableNoComment
entryRuleXVariableNoComment
:
{ before(grammarAccess.getXVariableNoCommentRule()); }
	 ruleXVariableNoComment
{ after(grammarAccess.getXVariableNoCommentRule()); } 
	 EOF 
;

// Rule XVariableNoComment
ruleXVariableNoComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXVariableNoCommentAccess().getGroup()); }
		(rule__XVariableNoComment__Group__0)
		{ after(grammarAccess.getXVariableNoCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXVariableMLComment
entryRuleXVariableMLComment
:
{ before(grammarAccess.getXVariableMLCommentRule()); }
	 ruleXVariableMLComment
{ after(grammarAccess.getXVariableMLCommentRule()); } 
	 EOF 
;

// Rule XVariableMLComment
ruleXVariableMLComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXVariableMLCommentAccess().getGroup()); }
		(rule__XVariableMLComment__Group__0)
		{ after(grammarAccess.getXVariableMLCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXVariableSLComment
entryRuleXVariableSLComment
:
{ before(grammarAccess.getXVariableSLCommentRule()); }
	 ruleXVariableSLComment
{ after(grammarAccess.getXVariableSLCommentRule()); } 
	 EOF 
;

// Rule XVariableSLComment
ruleXVariableSLComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXVariableSLCommentAccess().getGroup()); }
		(rule__XVariableSLComment__Group__0)
		{ after(grammarAccess.getXVariableSLCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXInvariant
entryRuleXInvariant
:
{ before(grammarAccess.getXInvariantRule()); }
	 ruleXInvariant
{ after(grammarAccess.getXInvariantRule()); } 
	 EOF 
;

// Rule XInvariant
ruleXInvariant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXInvariantAccess().getAlternatives()); }
		(rule__XInvariant__Alternatives)
		{ after(grammarAccess.getXInvariantAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXInvariantNoComment
entryRuleXInvariantNoComment
:
{ before(grammarAccess.getXInvariantNoCommentRule()); }
	 ruleXInvariantNoComment
{ after(grammarAccess.getXInvariantNoCommentRule()); } 
	 EOF 
;

// Rule XInvariantNoComment
ruleXInvariantNoComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXInvariantNoCommentAccess().getGroup()); }
		(rule__XInvariantNoComment__Group__0)
		{ after(grammarAccess.getXInvariantNoCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXInvariantMLComment
entryRuleXInvariantMLComment
:
{ before(grammarAccess.getXInvariantMLCommentRule()); }
	 ruleXInvariantMLComment
{ after(grammarAccess.getXInvariantMLCommentRule()); } 
	 EOF 
;

// Rule XInvariantMLComment
ruleXInvariantMLComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXInvariantMLCommentAccess().getGroup()); }
		(rule__XInvariantMLComment__Group__0)
		{ after(grammarAccess.getXInvariantMLCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXInvariantSLComment
entryRuleXInvariantSLComment
:
{ before(grammarAccess.getXInvariantSLCommentRule()); }
	 ruleXInvariantSLComment
{ after(grammarAccess.getXInvariantSLCommentRule()); } 
	 EOF 
;

// Rule XInvariantSLComment
ruleXInvariantSLComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXInvariantSLCommentAccess().getGroup()); }
		(rule__XInvariantSLComment__Group__0)
		{ after(grammarAccess.getXInvariantSLCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXVariant
entryRuleXVariant
:
{ before(grammarAccess.getXVariantRule()); }
	 ruleXVariant
{ after(grammarAccess.getXVariantRule()); } 
	 EOF 
;

// Rule XVariant
ruleXVariant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXVariantAccess().getAlternatives()); }
		(rule__XVariant__Alternatives)
		{ after(grammarAccess.getXVariantAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXVariantNoComment
entryRuleXVariantNoComment
:
{ before(grammarAccess.getXVariantNoCommentRule()); }
	 ruleXVariantNoComment
{ after(grammarAccess.getXVariantNoCommentRule()); } 
	 EOF 
;

// Rule XVariantNoComment
ruleXVariantNoComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXVariantNoCommentAccess().getGroup()); }
		(rule__XVariantNoComment__Group__0)
		{ after(grammarAccess.getXVariantNoCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXVariantMLComment
entryRuleXVariantMLComment
:
{ before(grammarAccess.getXVariantMLCommentRule()); }
	 ruleXVariantMLComment
{ after(grammarAccess.getXVariantMLCommentRule()); } 
	 EOF 
;

// Rule XVariantMLComment
ruleXVariantMLComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXVariantMLCommentAccess().getGroup()); }
		(rule__XVariantMLComment__Group__0)
		{ after(grammarAccess.getXVariantMLCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXVariantSLComment
entryRuleXVariantSLComment
:
{ before(grammarAccess.getXVariantSLCommentRule()); }
	 ruleXVariantSLComment
{ after(grammarAccess.getXVariantSLCommentRule()); } 
	 EOF 
;

// Rule XVariantSLComment
ruleXVariantSLComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXVariantSLCommentAccess().getGroup()); }
		(rule__XVariantSLComment__Group__0)
		{ after(grammarAccess.getXVariantSLCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXParameterNoComment
entryRuleXParameterNoComment
:
{ before(grammarAccess.getXParameterNoCommentRule()); }
	 ruleXParameterNoComment
{ after(grammarAccess.getXParameterNoCommentRule()); } 
	 EOF 
;

// Rule XParameterNoComment
ruleXParameterNoComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXParameterNoCommentAccess().getGroup()); }
		(rule__XParameterNoComment__Group__0)
		{ after(grammarAccess.getXParameterNoCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXParameterMLComment
entryRuleXParameterMLComment
:
{ before(grammarAccess.getXParameterMLCommentRule()); }
	 ruleXParameterMLComment
{ after(grammarAccess.getXParameterMLCommentRule()); } 
	 EOF 
;

// Rule XParameterMLComment
ruleXParameterMLComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXParameterMLCommentAccess().getGroup()); }
		(rule__XParameterMLComment__Group__0)
		{ after(grammarAccess.getXParameterMLCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXParameterSLComment
entryRuleXParameterSLComment
:
{ before(grammarAccess.getXParameterSLCommentRule()); }
	 ruleXParameterSLComment
{ after(grammarAccess.getXParameterSLCommentRule()); } 
	 EOF 
;

// Rule XParameterSLComment
ruleXParameterSLComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXParameterSLCommentAccess().getGroup()); }
		(rule__XParameterSLComment__Group__0)
		{ after(grammarAccess.getXParameterSLCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXGuardNoComment
entryRuleXGuardNoComment
:
{ before(grammarAccess.getXGuardNoCommentRule()); }
	 ruleXGuardNoComment
{ after(grammarAccess.getXGuardNoCommentRule()); } 
	 EOF 
;

// Rule XGuardNoComment
ruleXGuardNoComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXGuardNoCommentAccess().getGroup()); }
		(rule__XGuardNoComment__Group__0)
		{ after(grammarAccess.getXGuardNoCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXGuardMLComment
entryRuleXGuardMLComment
:
{ before(grammarAccess.getXGuardMLCommentRule()); }
	 ruleXGuardMLComment
{ after(grammarAccess.getXGuardMLCommentRule()); } 
	 EOF 
;

// Rule XGuardMLComment
ruleXGuardMLComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXGuardMLCommentAccess().getGroup()); }
		(rule__XGuardMLComment__Group__0)
		{ after(grammarAccess.getXGuardMLCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXGuardSLComment
entryRuleXGuardSLComment
:
{ before(grammarAccess.getXGuardSLCommentRule()); }
	 ruleXGuardSLComment
{ after(grammarAccess.getXGuardSLCommentRule()); } 
	 EOF 
;

// Rule XGuardSLComment
ruleXGuardSLComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXGuardSLCommentAccess().getGroup()); }
		(rule__XGuardSLComment__Group__0)
		{ after(grammarAccess.getXGuardSLCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXWitnessNoComment
entryRuleXWitnessNoComment
:
{ before(grammarAccess.getXWitnessNoCommentRule()); }
	 ruleXWitnessNoComment
{ after(grammarAccess.getXWitnessNoCommentRule()); } 
	 EOF 
;

// Rule XWitnessNoComment
ruleXWitnessNoComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXWitnessNoCommentAccess().getGroup()); }
		(rule__XWitnessNoComment__Group__0)
		{ after(grammarAccess.getXWitnessNoCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXWitnessMLComment
entryRuleXWitnessMLComment
:
{ before(grammarAccess.getXWitnessMLCommentRule()); }
	 ruleXWitnessMLComment
{ after(grammarAccess.getXWitnessMLCommentRule()); } 
	 EOF 
;

// Rule XWitnessMLComment
ruleXWitnessMLComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXWitnessMLCommentAccess().getGroup()); }
		(rule__XWitnessMLComment__Group__0)
		{ after(grammarAccess.getXWitnessMLCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXWitnessSLComment
entryRuleXWitnessSLComment
:
{ before(grammarAccess.getXWitnessSLCommentRule()); }
	 ruleXWitnessSLComment
{ after(grammarAccess.getXWitnessSLCommentRule()); } 
	 EOF 
;

// Rule XWitnessSLComment
ruleXWitnessSLComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXWitnessSLCommentAccess().getGroup()); }
		(rule__XWitnessSLComment__Group__0)
		{ after(grammarAccess.getXWitnessSLCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXActionNoComment
entryRuleXActionNoComment
:
{ before(grammarAccess.getXActionNoCommentRule()); }
	 ruleXActionNoComment
{ after(grammarAccess.getXActionNoCommentRule()); } 
	 EOF 
;

// Rule XActionNoComment
ruleXActionNoComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXActionNoCommentAccess().getGroup()); }
		(rule__XActionNoComment__Group__0)
		{ after(grammarAccess.getXActionNoCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXActionMLComment
entryRuleXActionMLComment
:
{ before(grammarAccess.getXActionMLCommentRule()); }
	 ruleXActionMLComment
{ after(grammarAccess.getXActionMLCommentRule()); } 
	 EOF 
;

// Rule XActionMLComment
ruleXActionMLComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXActionMLCommentAccess().getGroup()); }
		(rule__XActionMLComment__Group__0)
		{ after(grammarAccess.getXActionMLCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXActionSLComment
entryRuleXActionSLComment
:
{ before(grammarAccess.getXActionSLCommentRule()); }
	 ruleXActionSLComment
{ after(grammarAccess.getXActionSLCommentRule()); } 
	 EOF 
;

// Rule XActionSLComment
ruleXActionSLComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXActionSLCommentAccess().getGroup()); }
		(rule__XActionSLComment__Group__0)
		{ after(grammarAccess.getXActionSLCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__CommentAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXMachineAccess().getCommentML_COMMENTTerminalRuleCall_1_0_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getXMachineAccess().getCommentML_COMMENTTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getXMachineAccess().getCommentSL_COMMENTTerminalRuleCall_1_0_1()); }
		RULE_SL_COMMENT
		{ after(grammarAccess.getXMachineAccess().getCommentSL_COMMENTTerminalRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariable__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXVariableAccess().getXVariableNoCommentParserRuleCall_0()); }
		ruleXVariableNoComment
		{ after(grammarAccess.getXVariableAccess().getXVariableNoCommentParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getXVariableAccess().getXVariableMLCommentParserRuleCall_1()); }
		ruleXVariableMLComment
		{ after(grammarAccess.getXVariableAccess().getXVariableMLCommentParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getXVariableAccess().getXVariableSLCommentParserRuleCall_2()); }
		ruleXVariableSLComment
		{ after(grammarAccess.getXVariableAccess().getXVariableSLCommentParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariant__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXInvariantAccess().getXInvariantNoCommentParserRuleCall_0()); }
		ruleXInvariantNoComment
		{ after(grammarAccess.getXInvariantAccess().getXInvariantNoCommentParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getXInvariantAccess().getXInvariantMLCommentParserRuleCall_1()); }
		ruleXInvariantMLComment
		{ after(grammarAccess.getXInvariantAccess().getXInvariantMLCommentParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getXInvariantAccess().getXInvariantSLCommentParserRuleCall_2()); }
		ruleXInvariantSLComment
		{ after(grammarAccess.getXInvariantAccess().getXInvariantSLCommentParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariant__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXVariantAccess().getXVariantNoCommentParserRuleCall_0()); }
		ruleXVariantNoComment
		{ after(grammarAccess.getXVariantAccess().getXVariantNoCommentParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getXVariantAccess().getXVariantMLCommentParserRuleCall_1()); }
		ruleXVariantMLComment
		{ after(grammarAccess.getXVariantAccess().getXVariantMLCommentParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getXVariantAccess().getXVariantSLCommentParserRuleCall_2()); }
		ruleXVariantSLComment
		{ after(grammarAccess.getXVariantAccess().getXVariantSLCommentParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XMachine__Group__0__Impl
	rule__XMachine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXMachineAccess().getMachineInclusionAction_0()); }
	()
	{ after(grammarAccess.getXMachineAccess().getMachineInclusionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XMachine__Group__1__Impl
	rule__XMachine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXMachineAccess().getCommentAssignment_1()); }
	(rule__XMachine__CommentAssignment_1)?
	{ after(grammarAccess.getXMachineAccess().getCommentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XMachine__Group__2__Impl
	rule__XMachine__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXMachineAccess().getGroup_2()); }
	(rule__XMachine__Group_2__0)
	{ after(grammarAccess.getXMachineAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XMachine__Group__3__Impl
	rule__XMachine__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXMachineAccess().getMachineKeyword_3()); }
	'machine'
	{ after(grammarAccess.getXMachineAccess().getMachineKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XMachine__Group__4__Impl
	rule__XMachine__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXMachineAccess().getNameAssignment_4()); }
	(rule__XMachine__NameAssignment_4)
	{ after(grammarAccess.getXMachineAccess().getNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XMachine__Group__5__Impl
	rule__XMachine__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXMachineAccess().getGroup_5()); }
	(rule__XMachine__Group_5__0)?
	{ after(grammarAccess.getXMachineAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XMachine__Group__6__Impl
	rule__XMachine__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXMachineAccess().getGroup_6()); }
	(rule__XMachine__Group_6__0)?
	{ after(grammarAccess.getXMachineAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XMachine__Group__7__Impl
	rule__XMachine__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXMachineAccess().getGroup_7()); }
	(rule__XMachine__Group_7__0)?
	{ after(grammarAccess.getXMachineAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XMachine__Group__8__Impl
	rule__XMachine__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXMachineAccess().getGroup_8()); }
	(rule__XMachine__Group_8__0)?
	{ after(grammarAccess.getXMachineAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XMachine__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXMachineAccess().getEndKeyword_9()); }
	'end'
	{ after(grammarAccess.getXMachineAccess().getEndKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XMachine__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XMachine__Group_2__0__Impl
	rule__XMachine__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXMachineAccess().getIdKeyword_2_0()); }
	'id'
	{ after(grammarAccess.getXMachineAccess().getIdKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XMachine__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXMachineAccess().getExtensionIdAssignment_2_1()); }
	(rule__XMachine__ExtensionIdAssignment_2_1)
	{ after(grammarAccess.getXMachineAccess().getExtensionIdAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XMachine__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XMachine__Group_5__0__Impl
	rule__XMachine__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXMachineAccess().getRefinesKeyword_5_0()); }
	'refines'
	{ after(grammarAccess.getXMachineAccess().getRefinesKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XMachine__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXMachineAccess().getRefinesAssignment_5_1()); }
	(rule__XMachine__RefinesAssignment_5_1)
	{ after(grammarAccess.getXMachineAccess().getRefinesAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XMachine__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XMachine__Group_6__0__Impl
	rule__XMachine__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXMachineAccess().getIncludesKeyword_6_0()); }
	'includes'
	{ after(grammarAccess.getXMachineAccess().getIncludesKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XMachine__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXMachineAccess().getAbstractMachineAssignment_6_1()); }
	(rule__XMachine__AbstractMachineAssignment_6_1)
	{ after(grammarAccess.getXMachineAccess().getAbstractMachineAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XMachine__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XMachine__Group_7__0__Impl
	rule__XMachine__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXMachineAccess().getToKeyword_7_0()); }
	'to'
	{ after(grammarAccess.getXMachineAccess().getToKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XMachine__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXMachineAccess().getConcreteMachineAssignment_7_1()); }
	(rule__XMachine__ConcreteMachineAssignment_7_1)
	{ after(grammarAccess.getXMachineAccess().getConcreteMachineAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XMachine__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XMachine__Group_8__0__Impl
	rule__XMachine__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXMachineAccess().getAsKeyword_8_0()); }
	'as'
	{ after(grammarAccess.getXMachineAccess().getAsKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XMachine__Group_8__1__Impl
	rule__XMachine__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXMachineAccess().getPrefixesAssignment_8_1()); }
	(rule__XMachine__PrefixesAssignment_8_1)
	{ after(grammarAccess.getXMachineAccess().getPrefixesAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XMachine__Group_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXMachineAccess().getPrefixesAssignment_8_2()); }
	(rule__XMachine__PrefixesAssignment_8_2)*
	{ after(grammarAccess.getXMachineAccess().getPrefixesAssignment_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XVariableNoComment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XVariableNoComment__Group__0__Impl
	rule__XVariableNoComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableNoComment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXVariableNoCommentAccess().getVariableAction_0()); }
	()
	{ after(grammarAccess.getXVariableNoCommentAccess().getVariableAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableNoComment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XVariableNoComment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableNoComment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXVariableNoCommentAccess().getNameAssignment_1()); }
	(rule__XVariableNoComment__NameAssignment_1)
	{ after(grammarAccess.getXVariableNoCommentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XVariableMLComment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XVariableMLComment__Group__0__Impl
	rule__XVariableMLComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableMLComment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXVariableMLCommentAccess().getVariableAction_0()); }
	()
	{ after(grammarAccess.getXVariableMLCommentAccess().getVariableAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableMLComment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XVariableMLComment__Group__1__Impl
	rule__XVariableMLComment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableMLComment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXVariableMLCommentAccess().getCommentAssignment_1()); }
	(rule__XVariableMLComment__CommentAssignment_1)
	{ after(grammarAccess.getXVariableMLCommentAccess().getCommentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableMLComment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XVariableMLComment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableMLComment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXVariableMLCommentAccess().getNameAssignment_2()); }
	(rule__XVariableMLComment__NameAssignment_2)
	{ after(grammarAccess.getXVariableMLCommentAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XVariableSLComment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XVariableSLComment__Group__0__Impl
	rule__XVariableSLComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableSLComment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXVariableSLCommentAccess().getVariableAction_0()); }
	()
	{ after(grammarAccess.getXVariableSLCommentAccess().getVariableAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableSLComment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XVariableSLComment__Group__1__Impl
	rule__XVariableSLComment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableSLComment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXVariableSLCommentAccess().getNameAssignment_1()); }
	(rule__XVariableSLComment__NameAssignment_1)
	{ after(grammarAccess.getXVariableSLCommentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableSLComment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XVariableSLComment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableSLComment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXVariableSLCommentAccess().getCommentAssignment_2()); }
	(rule__XVariableSLComment__CommentAssignment_2)
	{ after(grammarAccess.getXVariableSLCommentAccess().getCommentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XInvariantNoComment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XInvariantNoComment__Group__0__Impl
	rule__XInvariantNoComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantNoComment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXInvariantNoCommentAccess().getInvariantAction_0()); }
	()
	{ after(grammarAccess.getXInvariantNoCommentAccess().getInvariantAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantNoComment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XInvariantNoComment__Group__1__Impl
	rule__XInvariantNoComment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantNoComment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXInvariantNoCommentAccess().getNameAssignment_1()); }
	(rule__XInvariantNoComment__NameAssignment_1)
	{ after(grammarAccess.getXInvariantNoCommentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantNoComment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XInvariantNoComment__Group__2__Impl
	rule__XInvariantNoComment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantNoComment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXInvariantNoCommentAccess().getPredicateAssignment_2()); }
	(rule__XInvariantNoComment__PredicateAssignment_2)
	{ after(grammarAccess.getXInvariantNoCommentAccess().getPredicateAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantNoComment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XInvariantNoComment__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantNoComment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXInvariantNoCommentAccess().getTheoremAssignment_3()); }
	(rule__XInvariantNoComment__TheoremAssignment_3)?
	{ after(grammarAccess.getXInvariantNoCommentAccess().getTheoremAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XInvariantMLComment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XInvariantMLComment__Group__0__Impl
	rule__XInvariantMLComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantMLComment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXInvariantMLCommentAccess().getInvariantAction_0()); }
	()
	{ after(grammarAccess.getXInvariantMLCommentAccess().getInvariantAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantMLComment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XInvariantMLComment__Group__1__Impl
	rule__XInvariantMLComment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantMLComment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXInvariantMLCommentAccess().getCommentAssignment_1()); }
	(rule__XInvariantMLComment__CommentAssignment_1)
	{ after(grammarAccess.getXInvariantMLCommentAccess().getCommentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantMLComment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XInvariantMLComment__Group__2__Impl
	rule__XInvariantMLComment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantMLComment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXInvariantMLCommentAccess().getNameAssignment_2()); }
	(rule__XInvariantMLComment__NameAssignment_2)
	{ after(grammarAccess.getXInvariantMLCommentAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantMLComment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XInvariantMLComment__Group__3__Impl
	rule__XInvariantMLComment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantMLComment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXInvariantMLCommentAccess().getPredicateAssignment_3()); }
	(rule__XInvariantMLComment__PredicateAssignment_3)
	{ after(grammarAccess.getXInvariantMLCommentAccess().getPredicateAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantMLComment__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XInvariantMLComment__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantMLComment__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXInvariantMLCommentAccess().getTheoremAssignment_4()); }
	(rule__XInvariantMLComment__TheoremAssignment_4)?
	{ after(grammarAccess.getXInvariantMLCommentAccess().getTheoremAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XInvariantSLComment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XInvariantSLComment__Group__0__Impl
	rule__XInvariantSLComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantSLComment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXInvariantSLCommentAccess().getInvariantAction_0()); }
	()
	{ after(grammarAccess.getXInvariantSLCommentAccess().getInvariantAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantSLComment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XInvariantSLComment__Group__1__Impl
	rule__XInvariantSLComment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantSLComment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXInvariantSLCommentAccess().getNameAssignment_1()); }
	(rule__XInvariantSLComment__NameAssignment_1)
	{ after(grammarAccess.getXInvariantSLCommentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantSLComment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XInvariantSLComment__Group__2__Impl
	rule__XInvariantSLComment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantSLComment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXInvariantSLCommentAccess().getPredicateAssignment_2()); }
	(rule__XInvariantSLComment__PredicateAssignment_2)
	{ after(grammarAccess.getXInvariantSLCommentAccess().getPredicateAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantSLComment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XInvariantSLComment__Group__3__Impl
	rule__XInvariantSLComment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantSLComment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXInvariantSLCommentAccess().getTheoremAssignment_3()); }
	(rule__XInvariantSLComment__TheoremAssignment_3)?
	{ after(grammarAccess.getXInvariantSLCommentAccess().getTheoremAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantSLComment__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XInvariantSLComment__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantSLComment__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXInvariantSLCommentAccess().getCommentAssignment_4()); }
	(rule__XInvariantSLComment__CommentAssignment_4)
	{ after(grammarAccess.getXInvariantSLCommentAccess().getCommentAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XVariantNoComment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XVariantNoComment__Group__0__Impl
	rule__XVariantNoComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariantNoComment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXVariantNoCommentAccess().getVariantAction_0()); }
	()
	{ after(grammarAccess.getXVariantNoCommentAccess().getVariantAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariantNoComment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XVariantNoComment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariantNoComment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXVariantNoCommentAccess().getExpressionAssignment_1()); }
	(rule__XVariantNoComment__ExpressionAssignment_1)
	{ after(grammarAccess.getXVariantNoCommentAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XVariantMLComment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XVariantMLComment__Group__0__Impl
	rule__XVariantMLComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariantMLComment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXVariantMLCommentAccess().getVariantAction_0()); }
	()
	{ after(grammarAccess.getXVariantMLCommentAccess().getVariantAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariantMLComment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XVariantMLComment__Group__1__Impl
	rule__XVariantMLComment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariantMLComment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXVariantMLCommentAccess().getCommentAssignment_1()); }
	(rule__XVariantMLComment__CommentAssignment_1)
	{ after(grammarAccess.getXVariantMLCommentAccess().getCommentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariantMLComment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XVariantMLComment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariantMLComment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXVariantMLCommentAccess().getExpressionAssignment_2()); }
	(rule__XVariantMLComment__ExpressionAssignment_2)
	{ after(grammarAccess.getXVariantMLCommentAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XVariantSLComment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XVariantSLComment__Group__0__Impl
	rule__XVariantSLComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariantSLComment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXVariantSLCommentAccess().getVariantAction_0()); }
	()
	{ after(grammarAccess.getXVariantSLCommentAccess().getVariantAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariantSLComment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XVariantSLComment__Group__1__Impl
	rule__XVariantSLComment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariantSLComment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXVariantSLCommentAccess().getExpressionAssignment_1()); }
	(rule__XVariantSLComment__ExpressionAssignment_1)
	{ after(grammarAccess.getXVariantSLCommentAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariantSLComment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XVariantSLComment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariantSLComment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXVariantSLCommentAccess().getCommentAssignment_2()); }
	(rule__XVariantSLComment__CommentAssignment_2)
	{ after(grammarAccess.getXVariantSLCommentAccess().getCommentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XParameterNoComment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XParameterNoComment__Group__0__Impl
	rule__XParameterNoComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XParameterNoComment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXParameterNoCommentAccess().getParameterAction_0()); }
	()
	{ after(grammarAccess.getXParameterNoCommentAccess().getParameterAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XParameterNoComment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XParameterNoComment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XParameterNoComment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXParameterNoCommentAccess().getNameAssignment_1()); }
	(rule__XParameterNoComment__NameAssignment_1)
	{ after(grammarAccess.getXParameterNoCommentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XParameterMLComment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XParameterMLComment__Group__0__Impl
	rule__XParameterMLComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XParameterMLComment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXParameterMLCommentAccess().getParameterAction_0()); }
	()
	{ after(grammarAccess.getXParameterMLCommentAccess().getParameterAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XParameterMLComment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XParameterMLComment__Group__1__Impl
	rule__XParameterMLComment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XParameterMLComment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXParameterMLCommentAccess().getCommentAssignment_1()); }
	(rule__XParameterMLComment__CommentAssignment_1)
	{ after(grammarAccess.getXParameterMLCommentAccess().getCommentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XParameterMLComment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XParameterMLComment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XParameterMLComment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXParameterMLCommentAccess().getNameAssignment_2()); }
	(rule__XParameterMLComment__NameAssignment_2)
	{ after(grammarAccess.getXParameterMLCommentAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XParameterSLComment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XParameterSLComment__Group__0__Impl
	rule__XParameterSLComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XParameterSLComment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXParameterSLCommentAccess().getParameterAction_0()); }
	()
	{ after(grammarAccess.getXParameterSLCommentAccess().getParameterAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XParameterSLComment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XParameterSLComment__Group__1__Impl
	rule__XParameterSLComment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XParameterSLComment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXParameterSLCommentAccess().getNameAssignment_1()); }
	(rule__XParameterSLComment__NameAssignment_1)
	{ after(grammarAccess.getXParameterSLCommentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XParameterSLComment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XParameterSLComment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XParameterSLComment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXParameterSLCommentAccess().getCommentAssignment_2()); }
	(rule__XParameterSLComment__CommentAssignment_2)
	{ after(grammarAccess.getXParameterSLCommentAccess().getCommentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XGuardNoComment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XGuardNoComment__Group__0__Impl
	rule__XGuardNoComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardNoComment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXGuardNoCommentAccess().getGuardAction_0()); }
	()
	{ after(grammarAccess.getXGuardNoCommentAccess().getGuardAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardNoComment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XGuardNoComment__Group__1__Impl
	rule__XGuardNoComment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardNoComment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXGuardNoCommentAccess().getNameAssignment_1()); }
	(rule__XGuardNoComment__NameAssignment_1)
	{ after(grammarAccess.getXGuardNoCommentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardNoComment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XGuardNoComment__Group__2__Impl
	rule__XGuardNoComment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardNoComment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXGuardNoCommentAccess().getPredicateAssignment_2()); }
	(rule__XGuardNoComment__PredicateAssignment_2)
	{ after(grammarAccess.getXGuardNoCommentAccess().getPredicateAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardNoComment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XGuardNoComment__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardNoComment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXGuardNoCommentAccess().getTheoremAssignment_3()); }
	(rule__XGuardNoComment__TheoremAssignment_3)?
	{ after(grammarAccess.getXGuardNoCommentAccess().getTheoremAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XGuardMLComment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XGuardMLComment__Group__0__Impl
	rule__XGuardMLComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardMLComment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXGuardMLCommentAccess().getGuardAction_0()); }
	()
	{ after(grammarAccess.getXGuardMLCommentAccess().getGuardAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardMLComment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XGuardMLComment__Group__1__Impl
	rule__XGuardMLComment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardMLComment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXGuardMLCommentAccess().getCommentAssignment_1()); }
	(rule__XGuardMLComment__CommentAssignment_1)
	{ after(grammarAccess.getXGuardMLCommentAccess().getCommentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardMLComment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XGuardMLComment__Group__2__Impl
	rule__XGuardMLComment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardMLComment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXGuardMLCommentAccess().getNameAssignment_2()); }
	(rule__XGuardMLComment__NameAssignment_2)
	{ after(grammarAccess.getXGuardMLCommentAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardMLComment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XGuardMLComment__Group__3__Impl
	rule__XGuardMLComment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardMLComment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXGuardMLCommentAccess().getPredicateAssignment_3()); }
	(rule__XGuardMLComment__PredicateAssignment_3)
	{ after(grammarAccess.getXGuardMLCommentAccess().getPredicateAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardMLComment__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XGuardMLComment__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardMLComment__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXGuardMLCommentAccess().getTheoremAssignment_4()); }
	(rule__XGuardMLComment__TheoremAssignment_4)?
	{ after(grammarAccess.getXGuardMLCommentAccess().getTheoremAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XGuardSLComment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XGuardSLComment__Group__0__Impl
	rule__XGuardSLComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardSLComment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXGuardSLCommentAccess().getGuardAction_0()); }
	()
	{ after(grammarAccess.getXGuardSLCommentAccess().getGuardAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardSLComment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XGuardSLComment__Group__1__Impl
	rule__XGuardSLComment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardSLComment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXGuardSLCommentAccess().getNameAssignment_1()); }
	(rule__XGuardSLComment__NameAssignment_1)
	{ after(grammarAccess.getXGuardSLCommentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardSLComment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XGuardSLComment__Group__2__Impl
	rule__XGuardSLComment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardSLComment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXGuardSLCommentAccess().getPredicateAssignment_2()); }
	(rule__XGuardSLComment__PredicateAssignment_2)
	{ after(grammarAccess.getXGuardSLCommentAccess().getPredicateAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardSLComment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XGuardSLComment__Group__3__Impl
	rule__XGuardSLComment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardSLComment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXGuardSLCommentAccess().getTheoremAssignment_3()); }
	(rule__XGuardSLComment__TheoremAssignment_3)?
	{ after(grammarAccess.getXGuardSLCommentAccess().getTheoremAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardSLComment__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XGuardSLComment__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardSLComment__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXGuardSLCommentAccess().getCommentAssignment_4()); }
	(rule__XGuardSLComment__CommentAssignment_4)
	{ after(grammarAccess.getXGuardSLCommentAccess().getCommentAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XWitnessNoComment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XWitnessNoComment__Group__0__Impl
	rule__XWitnessNoComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XWitnessNoComment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXWitnessNoCommentAccess().getWitnessAction_0()); }
	()
	{ after(grammarAccess.getXWitnessNoCommentAccess().getWitnessAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XWitnessNoComment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XWitnessNoComment__Group__1__Impl
	rule__XWitnessNoComment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XWitnessNoComment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXWitnessNoCommentAccess().getNameAssignment_1()); }
	(rule__XWitnessNoComment__NameAssignment_1)
	{ after(grammarAccess.getXWitnessNoCommentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XWitnessNoComment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XWitnessNoComment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XWitnessNoComment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXWitnessNoCommentAccess().getPredicateAssignment_2()); }
	(rule__XWitnessNoComment__PredicateAssignment_2)
	{ after(grammarAccess.getXWitnessNoCommentAccess().getPredicateAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XWitnessMLComment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XWitnessMLComment__Group__0__Impl
	rule__XWitnessMLComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XWitnessMLComment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXWitnessMLCommentAccess().getWitnessAction_0()); }
	()
	{ after(grammarAccess.getXWitnessMLCommentAccess().getWitnessAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XWitnessMLComment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XWitnessMLComment__Group__1__Impl
	rule__XWitnessMLComment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XWitnessMLComment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXWitnessMLCommentAccess().getCommentAssignment_1()); }
	(rule__XWitnessMLComment__CommentAssignment_1)
	{ after(grammarAccess.getXWitnessMLCommentAccess().getCommentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XWitnessMLComment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XWitnessMLComment__Group__2__Impl
	rule__XWitnessMLComment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XWitnessMLComment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXWitnessMLCommentAccess().getNameAssignment_2()); }
	(rule__XWitnessMLComment__NameAssignment_2)
	{ after(grammarAccess.getXWitnessMLCommentAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XWitnessMLComment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XWitnessMLComment__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XWitnessMLComment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXWitnessMLCommentAccess().getPredicateAssignment_3()); }
	(rule__XWitnessMLComment__PredicateAssignment_3)
	{ after(grammarAccess.getXWitnessMLCommentAccess().getPredicateAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XWitnessSLComment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XWitnessSLComment__Group__0__Impl
	rule__XWitnessSLComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XWitnessSLComment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXWitnessSLCommentAccess().getWitnessAction_0()); }
	()
	{ after(grammarAccess.getXWitnessSLCommentAccess().getWitnessAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XWitnessSLComment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XWitnessSLComment__Group__1__Impl
	rule__XWitnessSLComment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XWitnessSLComment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXWitnessSLCommentAccess().getNameAssignment_1()); }
	(rule__XWitnessSLComment__NameAssignment_1)
	{ after(grammarAccess.getXWitnessSLCommentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XWitnessSLComment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XWitnessSLComment__Group__2__Impl
	rule__XWitnessSLComment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XWitnessSLComment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXWitnessSLCommentAccess().getPredicateAssignment_2()); }
	(rule__XWitnessSLComment__PredicateAssignment_2)
	{ after(grammarAccess.getXWitnessSLCommentAccess().getPredicateAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XWitnessSLComment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XWitnessSLComment__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XWitnessSLComment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXWitnessSLCommentAccess().getCommentAssignment_3()); }
	(rule__XWitnessSLComment__CommentAssignment_3)
	{ after(grammarAccess.getXWitnessSLCommentAccess().getCommentAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XActionNoComment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XActionNoComment__Group__0__Impl
	rule__XActionNoComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XActionNoComment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXActionNoCommentAccess().getActionAction_0()); }
	()
	{ after(grammarAccess.getXActionNoCommentAccess().getActionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XActionNoComment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XActionNoComment__Group__1__Impl
	rule__XActionNoComment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XActionNoComment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXActionNoCommentAccess().getNameAssignment_1()); }
	(rule__XActionNoComment__NameAssignment_1)
	{ after(grammarAccess.getXActionNoCommentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XActionNoComment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XActionNoComment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XActionNoComment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXActionNoCommentAccess().getActionAssignment_2()); }
	(rule__XActionNoComment__ActionAssignment_2)
	{ after(grammarAccess.getXActionNoCommentAccess().getActionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XActionMLComment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XActionMLComment__Group__0__Impl
	rule__XActionMLComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XActionMLComment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXActionMLCommentAccess().getActionAction_0()); }
	()
	{ after(grammarAccess.getXActionMLCommentAccess().getActionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XActionMLComment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XActionMLComment__Group__1__Impl
	rule__XActionMLComment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XActionMLComment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXActionMLCommentAccess().getCommentAssignment_1()); }
	(rule__XActionMLComment__CommentAssignment_1)
	{ after(grammarAccess.getXActionMLCommentAccess().getCommentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XActionMLComment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XActionMLComment__Group__2__Impl
	rule__XActionMLComment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XActionMLComment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXActionMLCommentAccess().getNameAssignment_2()); }
	(rule__XActionMLComment__NameAssignment_2)
	{ after(grammarAccess.getXActionMLCommentAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XActionMLComment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XActionMLComment__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XActionMLComment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXActionMLCommentAccess().getActionAssignment_3()); }
	(rule__XActionMLComment__ActionAssignment_3)
	{ after(grammarAccess.getXActionMLCommentAccess().getActionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XActionSLComment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XActionSLComment__Group__0__Impl
	rule__XActionSLComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XActionSLComment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXActionSLCommentAccess().getActionAction_0()); }
	()
	{ after(grammarAccess.getXActionSLCommentAccess().getActionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XActionSLComment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XActionSLComment__Group__1__Impl
	rule__XActionSLComment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XActionSLComment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXActionSLCommentAccess().getNameAssignment_1()); }
	(rule__XActionSLComment__NameAssignment_1)
	{ after(grammarAccess.getXActionSLCommentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XActionSLComment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XActionSLComment__Group__2__Impl
	rule__XActionSLComment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XActionSLComment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXActionSLCommentAccess().getActionAssignment_2()); }
	(rule__XActionSLComment__ActionAssignment_2)
	{ after(grammarAccess.getXActionSLCommentAccess().getActionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XActionSLComment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XActionSLComment__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XActionSLComment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXActionSLCommentAccess().getCommentAssignment_3()); }
	(rule__XActionSLComment__CommentAssignment_3)
	{ after(grammarAccess.getXActionSLCommentAccess().getCommentAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XMachine__CommentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXMachineAccess().getCommentAlternatives_1_0()); }
		(rule__XMachine__CommentAlternatives_1_0)
		{ after(grammarAccess.getXMachineAccess().getCommentAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__ExtensionIdAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXMachineAccess().getExtensionIdIDTerminalRuleCall_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getXMachineAccess().getExtensionIdIDTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__NameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXMachineAccess().getNameIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getXMachineAccess().getNameIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__RefinesAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXMachineAccess().getRefinesMachineInclusionCrossReference_5_1_0()); }
		(
			{ before(grammarAccess.getXMachineAccess().getRefinesMachineInclusionIDTerminalRuleCall_5_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getXMachineAccess().getRefinesMachineInclusionIDTerminalRuleCall_5_1_0_1()); }
		)
		{ after(grammarAccess.getXMachineAccess().getRefinesMachineInclusionCrossReference_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__AbstractMachineAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXMachineAccess().getAbstractMachineMachineInclusionCrossReference_6_1_0()); }
		(
			{ before(grammarAccess.getXMachineAccess().getAbstractMachineMachineInclusionIDTerminalRuleCall_6_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getXMachineAccess().getAbstractMachineMachineInclusionIDTerminalRuleCall_6_1_0_1()); }
		)
		{ after(grammarAccess.getXMachineAccess().getAbstractMachineMachineInclusionCrossReference_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__ConcreteMachineAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXMachineAccess().getConcreteMachineMachineInclusionCrossReference_7_1_0()); }
		(
			{ before(grammarAccess.getXMachineAccess().getConcreteMachineMachineInclusionIDTerminalRuleCall_7_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getXMachineAccess().getConcreteMachineMachineInclusionIDTerminalRuleCall_7_1_0_1()); }
		)
		{ after(grammarAccess.getXMachineAccess().getConcreteMachineMachineInclusionCrossReference_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__PrefixesAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXMachineAccess().getPrefixesIDTerminalRuleCall_8_1_0()); }
		RULE_ID
		{ after(grammarAccess.getXMachineAccess().getPrefixesIDTerminalRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XMachine__PrefixesAssignment_8_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXMachineAccess().getPrefixesIDTerminalRuleCall_8_2_0()); }
		RULE_ID
		{ after(grammarAccess.getXMachineAccess().getPrefixesIDTerminalRuleCall_8_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableNoComment__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXVariableNoCommentAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getXVariableNoCommentAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableMLComment__CommentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXVariableMLCommentAccess().getCommentML_COMMENTTerminalRuleCall_1_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getXVariableMLCommentAccess().getCommentML_COMMENTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableMLComment__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXVariableMLCommentAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getXVariableMLCommentAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableSLComment__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXVariableSLCommentAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getXVariableSLCommentAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariableSLComment__CommentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXVariableSLCommentAccess().getCommentSL_COMMENTTerminalRuleCall_2_0()); }
		RULE_SL_COMMENT
		{ after(grammarAccess.getXVariableSLCommentAccess().getCommentSL_COMMENTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantNoComment__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXInvariantNoCommentAccess().getNameXLABELTerminalRuleCall_1_0()); }
		RULE_XLABEL
		{ after(grammarAccess.getXInvariantNoCommentAccess().getNameXLABELTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantNoComment__PredicateAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXInvariantNoCommentAccess().getPredicateSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getXInvariantNoCommentAccess().getPredicateSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantNoComment__TheoremAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXInvariantNoCommentAccess().getTheoremTheoremKeyword_3_0()); }
		(
			{ before(grammarAccess.getXInvariantNoCommentAccess().getTheoremTheoremKeyword_3_0()); }
			'theorem'
			{ after(grammarAccess.getXInvariantNoCommentAccess().getTheoremTheoremKeyword_3_0()); }
		)
		{ after(grammarAccess.getXInvariantNoCommentAccess().getTheoremTheoremKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantMLComment__CommentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXInvariantMLCommentAccess().getCommentML_COMMENTTerminalRuleCall_1_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getXInvariantMLCommentAccess().getCommentML_COMMENTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantMLComment__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXInvariantMLCommentAccess().getNameXLABELTerminalRuleCall_2_0()); }
		RULE_XLABEL
		{ after(grammarAccess.getXInvariantMLCommentAccess().getNameXLABELTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantMLComment__PredicateAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXInvariantMLCommentAccess().getPredicateSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getXInvariantMLCommentAccess().getPredicateSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantMLComment__TheoremAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXInvariantMLCommentAccess().getTheoremTheoremKeyword_4_0()); }
		(
			{ before(grammarAccess.getXInvariantMLCommentAccess().getTheoremTheoremKeyword_4_0()); }
			'theorem'
			{ after(grammarAccess.getXInvariantMLCommentAccess().getTheoremTheoremKeyword_4_0()); }
		)
		{ after(grammarAccess.getXInvariantMLCommentAccess().getTheoremTheoremKeyword_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantSLComment__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXInvariantSLCommentAccess().getNameXLABELTerminalRuleCall_1_0()); }
		RULE_XLABEL
		{ after(grammarAccess.getXInvariantSLCommentAccess().getNameXLABELTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantSLComment__PredicateAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXInvariantSLCommentAccess().getPredicateSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getXInvariantSLCommentAccess().getPredicateSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantSLComment__TheoremAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXInvariantSLCommentAccess().getTheoremTheoremKeyword_3_0()); }
		(
			{ before(grammarAccess.getXInvariantSLCommentAccess().getTheoremTheoremKeyword_3_0()); }
			'theorem'
			{ after(grammarAccess.getXInvariantSLCommentAccess().getTheoremTheoremKeyword_3_0()); }
		)
		{ after(grammarAccess.getXInvariantSLCommentAccess().getTheoremTheoremKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XInvariantSLComment__CommentAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXInvariantSLCommentAccess().getCommentSL_COMMENTTerminalRuleCall_4_0()); }
		RULE_SL_COMMENT
		{ after(grammarAccess.getXInvariantSLCommentAccess().getCommentSL_COMMENTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariantNoComment__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXVariantNoCommentAccess().getExpressionSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getXVariantNoCommentAccess().getExpressionSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariantMLComment__CommentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXVariantMLCommentAccess().getCommentML_COMMENTTerminalRuleCall_1_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getXVariantMLCommentAccess().getCommentML_COMMENTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariantMLComment__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXVariantMLCommentAccess().getExpressionSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getXVariantMLCommentAccess().getExpressionSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariantSLComment__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXVariantSLCommentAccess().getExpressionSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getXVariantSLCommentAccess().getExpressionSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XVariantSLComment__CommentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXVariantSLCommentAccess().getCommentSL_COMMENTTerminalRuleCall_2_0()); }
		RULE_SL_COMMENT
		{ after(grammarAccess.getXVariantSLCommentAccess().getCommentSL_COMMENTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XParameterNoComment__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXParameterNoCommentAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getXParameterNoCommentAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XParameterMLComment__CommentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXParameterMLCommentAccess().getCommentML_COMMENTTerminalRuleCall_1_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getXParameterMLCommentAccess().getCommentML_COMMENTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XParameterMLComment__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXParameterMLCommentAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getXParameterMLCommentAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XParameterSLComment__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXParameterSLCommentAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getXParameterSLCommentAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XParameterSLComment__CommentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXParameterSLCommentAccess().getCommentSL_COMMENTTerminalRuleCall_2_0()); }
		RULE_SL_COMMENT
		{ after(grammarAccess.getXParameterSLCommentAccess().getCommentSL_COMMENTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardNoComment__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXGuardNoCommentAccess().getNameXLABELTerminalRuleCall_1_0()); }
		RULE_XLABEL
		{ after(grammarAccess.getXGuardNoCommentAccess().getNameXLABELTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardNoComment__PredicateAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXGuardNoCommentAccess().getPredicateSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getXGuardNoCommentAccess().getPredicateSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardNoComment__TheoremAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXGuardNoCommentAccess().getTheoremTheoremKeyword_3_0()); }
		(
			{ before(grammarAccess.getXGuardNoCommentAccess().getTheoremTheoremKeyword_3_0()); }
			'theorem'
			{ after(grammarAccess.getXGuardNoCommentAccess().getTheoremTheoremKeyword_3_0()); }
		)
		{ after(grammarAccess.getXGuardNoCommentAccess().getTheoremTheoremKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardMLComment__CommentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXGuardMLCommentAccess().getCommentML_COMMENTTerminalRuleCall_1_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getXGuardMLCommentAccess().getCommentML_COMMENTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardMLComment__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXGuardMLCommentAccess().getNameXLABELTerminalRuleCall_2_0()); }
		RULE_XLABEL
		{ after(grammarAccess.getXGuardMLCommentAccess().getNameXLABELTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardMLComment__PredicateAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXGuardMLCommentAccess().getPredicateSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getXGuardMLCommentAccess().getPredicateSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardMLComment__TheoremAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXGuardMLCommentAccess().getTheoremTheoremKeyword_4_0()); }
		(
			{ before(grammarAccess.getXGuardMLCommentAccess().getTheoremTheoremKeyword_4_0()); }
			'theorem'
			{ after(grammarAccess.getXGuardMLCommentAccess().getTheoremTheoremKeyword_4_0()); }
		)
		{ after(grammarAccess.getXGuardMLCommentAccess().getTheoremTheoremKeyword_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardSLComment__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXGuardSLCommentAccess().getNameXLABELTerminalRuleCall_1_0()); }
		RULE_XLABEL
		{ after(grammarAccess.getXGuardSLCommentAccess().getNameXLABELTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardSLComment__PredicateAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXGuardSLCommentAccess().getPredicateSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getXGuardSLCommentAccess().getPredicateSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardSLComment__TheoremAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXGuardSLCommentAccess().getTheoremTheoremKeyword_3_0()); }
		(
			{ before(grammarAccess.getXGuardSLCommentAccess().getTheoremTheoremKeyword_3_0()); }
			'theorem'
			{ after(grammarAccess.getXGuardSLCommentAccess().getTheoremTheoremKeyword_3_0()); }
		)
		{ after(grammarAccess.getXGuardSLCommentAccess().getTheoremTheoremKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XGuardSLComment__CommentAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXGuardSLCommentAccess().getCommentSL_COMMENTTerminalRuleCall_4_0()); }
		RULE_SL_COMMENT
		{ after(grammarAccess.getXGuardSLCommentAccess().getCommentSL_COMMENTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XWitnessNoComment__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXWitnessNoCommentAccess().getNameXLABELTerminalRuleCall_1_0()); }
		RULE_XLABEL
		{ after(grammarAccess.getXWitnessNoCommentAccess().getNameXLABELTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XWitnessNoComment__PredicateAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXWitnessNoCommentAccess().getPredicateSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getXWitnessNoCommentAccess().getPredicateSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XWitnessMLComment__CommentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXWitnessMLCommentAccess().getCommentML_COMMENTTerminalRuleCall_1_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getXWitnessMLCommentAccess().getCommentML_COMMENTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XWitnessMLComment__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXWitnessMLCommentAccess().getNameXLABELTerminalRuleCall_2_0()); }
		RULE_XLABEL
		{ after(grammarAccess.getXWitnessMLCommentAccess().getNameXLABELTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XWitnessMLComment__PredicateAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXWitnessMLCommentAccess().getPredicateSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getXWitnessMLCommentAccess().getPredicateSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XWitnessSLComment__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXWitnessSLCommentAccess().getNameXLABELTerminalRuleCall_1_0()); }
		RULE_XLABEL
		{ after(grammarAccess.getXWitnessSLCommentAccess().getNameXLABELTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XWitnessSLComment__PredicateAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXWitnessSLCommentAccess().getPredicateSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getXWitnessSLCommentAccess().getPredicateSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XWitnessSLComment__CommentAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXWitnessSLCommentAccess().getCommentSL_COMMENTTerminalRuleCall_3_0()); }
		RULE_SL_COMMENT
		{ after(grammarAccess.getXWitnessSLCommentAccess().getCommentSL_COMMENTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XActionNoComment__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXActionNoCommentAccess().getNameXLABELTerminalRuleCall_1_0()); }
		RULE_XLABEL
		{ after(grammarAccess.getXActionNoCommentAccess().getNameXLABELTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XActionNoComment__ActionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXActionNoCommentAccess().getActionSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getXActionNoCommentAccess().getActionSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XActionMLComment__CommentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXActionMLCommentAccess().getCommentML_COMMENTTerminalRuleCall_1_0()); }
		RULE_ML_COMMENT
		{ after(grammarAccess.getXActionMLCommentAccess().getCommentML_COMMENTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XActionMLComment__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXActionMLCommentAccess().getNameXLABELTerminalRuleCall_2_0()); }
		RULE_XLABEL
		{ after(grammarAccess.getXActionMLCommentAccess().getNameXLABELTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XActionMLComment__ActionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXActionMLCommentAccess().getActionSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getXActionMLCommentAccess().getActionSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XActionSLComment__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXActionSLCommentAccess().getNameXLABELTerminalRuleCall_1_0()); }
		RULE_XLABEL
		{ after(grammarAccess.getXActionSLCommentAccess().getNameXLABELTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XActionSLComment__ActionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXActionSLCommentAccess().getActionSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getXActionSLCommentAccess().getActionSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XActionSLComment__CommentAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXActionSLCommentAccess().getCommentSL_COMMENTTerminalRuleCall_3_0()); }
		RULE_SL_COMMENT
		{ after(grammarAccess.getXActionSLCommentAccess().getCommentSL_COMMENTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_XLABEL : '@' ~(':')+ ':';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
