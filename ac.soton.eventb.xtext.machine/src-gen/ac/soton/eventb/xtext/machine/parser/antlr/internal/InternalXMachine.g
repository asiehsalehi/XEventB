/*
 * generated by Xtext 2.10.0
 */
grammar InternalXMachine;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package ac.soton.eventb.xtext.machine.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package ac.soton.eventb.xtext.machine.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import ac.soton.eventb.xtext.machine.services.XMachineGrammarAccess;

}

@parser::members {

 	private XMachineGrammarAccess grammarAccess;

    public InternalXMachineParser(TokenStream input, XMachineGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "XMachine";
   	}

   	@Override
   	protected XMachineGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleXMachine
entryRuleXMachine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXMachineRule()); }
	iv_ruleXMachine=ruleXMachine
	{ $current=$iv_ruleXMachine.current; }
	EOF;

// Rule XMachine
ruleXMachine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXMachineAccess().getMachineAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_comment_1_1=RULE_ML_COMMENT
					{
						newLeafNode(lv_comment_1_1, grammarAccess.getXMachineAccess().getCommentML_COMMENTTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXMachineRule());
						}
						setWithLastConsumed(
							$current,
							"comment",
							lv_comment_1_1,
							"org.eclipse.xtext.common.Terminals.ML_COMMENT");
					}
					    |
					lv_comment_1_2=RULE_SL_COMMENT
					{
						newLeafNode(lv_comment_1_2, grammarAccess.getXMachineAccess().getCommentSL_COMMENTTerminalRuleCall_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXMachineRule());
						}
						setWithLastConsumed(
							$current,
							"comment",
							lv_comment_1_2,
							"org.eclipse.xtext.common.Terminals.SL_COMMENT");
					}
				)
			)
		)?
		otherlv_2='machine'
		{
			newLeafNode(otherlv_2, grammarAccess.getXMachineAccess().getMachineKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getXMachineAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXMachineRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_4='refines'
			{
				newLeafNode(otherlv_4, grammarAccess.getXMachineAccess().getRefinesKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXMachineRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getXMachineAccess().getRefinesMachineCrossReference_4_1_0());
					}
				)
			)
		)?
		(
			otherlv_6='sees'
			{
				newLeafNode(otherlv_6, grammarAccess.getXMachineAccess().getSeesKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXMachineRule());
						}
					}
					otherlv_7=RULE_ID
					{
						newLeafNode(otherlv_7, grammarAccess.getXMachineAccess().getSeesContextCrossReference_5_1_0());
					}
				)
			)+
		)?
		(
			otherlv_8='includes'
			{
				newLeafNode(otherlv_8, grammarAccess.getXMachineAccess().getIncludesKeyword_6_0());
			}
			{
				newCompositeNode(grammarAccess.getXMachineAccess().getXIncludedMachineParserRuleCall_6_1());
			}
			ruleXIncludedMachine
			{
				afterParserOrEnumRuleCall();
			}
		)?
		(
			otherlv_10='variables'
			{
				newLeafNode(otherlv_10, grammarAccess.getXMachineAccess().getVariablesKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getXMachineAccess().getVariablesXVariableParserRuleCall_7_1_0());
					}
					lv_variables_11_0=ruleXVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXMachineRule());
						}
						add(
							$current,
							"variables",
							lv_variables_11_0,
							"ac.soton.eventb.xtext.machine.XMachine.XVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		(
			otherlv_12='invariants'
			{
				newLeafNode(otherlv_12, grammarAccess.getXMachineAccess().getInvariantsKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getXMachineAccess().getInvariantsXInvariantParserRuleCall_8_1_0());
					}
					lv_invariants_13_0=ruleXInvariant
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXMachineRule());
						}
						add(
							$current,
							"invariants",
							lv_invariants_13_0,
							"ac.soton.eventb.xtext.machine.XMachine.XInvariant");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		(
			otherlv_14='variant'
			{
				newLeafNode(otherlv_14, grammarAccess.getXMachineAccess().getVariantKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getXMachineAccess().getVariantXVariantParserRuleCall_9_1_0());
					}
					lv_variant_15_0=ruleXVariant
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXMachineRule());
						}
						set(
							$current,
							"variant",
							lv_variant_15_0,
							"ac.soton.eventb.xtext.machine.XMachine.XVariant");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_16='events'
			{
				newLeafNode(otherlv_16, grammarAccess.getXMachineAccess().getEventsKeyword_10_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getXMachineAccess().getEventsXEventParserRuleCall_10_1_0());
					}
					lv_events_17_0=ruleXEvent
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXMachineRule());
						}
						add(
							$current,
							"events",
							lv_events_17_0,
							"ac.soton.eventb.xtext.machine.XMachine.XEvent");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getXMachineAccess().getEventsXEventParserRuleCall_10_2_0());
					}
					lv_events_18_0=ruleXEvent
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXMachineRule());
						}
						add(
							$current,
							"events",
							lv_events_18_0,
							"ac.soton.eventb.xtext.machine.XMachine.XEvent");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		otherlv_19='end'
		{
			newLeafNode(otherlv_19, grammarAccess.getXMachineAccess().getEndKeyword_11());
		}
	)
;

// Entry rule entryRuleXIncludedMachine
entryRuleXIncludedMachine returns [String current=null]:
	{ newCompositeNode(grammarAccess.getXIncludedMachineRule()); }
	iv_ruleXIncludedMachine=ruleXIncludedMachine
	{ $current=$iv_ruleXIncludedMachine.current.getText(); }
	EOF;

// Rule XIncludedMachine
ruleXIncludedMachine returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXIncludedMachineAccess().getXAbstractMachineParserRuleCall_0());
		}
		this_XAbstractMachine_0=ruleXAbstractMachine
		{
			$current.merge(this_XAbstractMachine_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXIncludedMachineAccess().getXMachineChainParserRuleCall_1());
		}
		this_XMachineChain_1=ruleXMachineChain
		{
			$current.merge(this_XMachineChain_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleXAbstractMachine
entryRuleXAbstractMachine returns [String current=null]:
	{ newCompositeNode(grammarAccess.getXAbstractMachineRule()); }
	iv_ruleXAbstractMachine=ruleXAbstractMachine
	{ $current=$iv_ruleXAbstractMachine.current.getText(); }
	EOF;

// Rule XAbstractMachine
ruleXAbstractMachine returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getXAbstractMachineAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='as'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getXAbstractMachineAccess().getAsKeyword_1_0());
			}
			(
				this_ID_2=RULE_ID
				{
					$current.merge(this_ID_2);
				}
				{
					newLeafNode(this_ID_2, grammarAccess.getXAbstractMachineAccess().getIDTerminalRuleCall_1_1());
				}
			)+
		)?
	)
;

// Entry rule entryRuleXMachineChain
entryRuleXMachineChain returns [String current=null]:
	{ newCompositeNode(grammarAccess.getXMachineChainRule()); }
	iv_ruleXMachineChain=ruleXMachineChain
	{ $current=$iv_ruleXMachineChain.current.getText(); }
	EOF;

// Rule XMachineChain
ruleXMachineChain returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getXMachineChainAccess().getIDTerminalRuleCall_0());
		}
		kw='to'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getXMachineChainAccess().getToKeyword_1());
		}
		this_ID_2=RULE_ID
		{
			$current.merge(this_ID_2);
		}
		{
			newLeafNode(this_ID_2, grammarAccess.getXMachineChainAccess().getIDTerminalRuleCall_2());
		}
		(
			kw='as'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getXMachineChainAccess().getAsKeyword_3_0());
			}
			(
				this_ID_4=RULE_ID
				{
					$current.merge(this_ID_4);
				}
				{
					newLeafNode(this_ID_4, grammarAccess.getXMachineChainAccess().getIDTerminalRuleCall_3_1());
				}
			)+
		)?
	)
;

// Entry rule entryRuleXVariable
entryRuleXVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXVariableRule()); }
	iv_ruleXVariable=ruleXVariable
	{ $current=$iv_ruleXVariable.current; }
	EOF;

// Rule XVariable
ruleXVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXVariableAccess().getXVariableNoCommentParserRuleCall_0());
		}
		this_XVariableNoComment_0=ruleXVariableNoComment
		{
			$current = $this_XVariableNoComment_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXVariableAccess().getXVariableMLCommentParserRuleCall_1());
		}
		this_XVariableMLComment_1=ruleXVariableMLComment
		{
			$current = $this_XVariableMLComment_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXVariableAccess().getXVariableSLCommentParserRuleCall_2());
		}
		this_XVariableSLComment_2=ruleXVariableSLComment
		{
			$current = $this_XVariableSLComment_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleXVariableNoComment
entryRuleXVariableNoComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXVariableNoCommentRule()); }
	iv_ruleXVariableNoComment=ruleXVariableNoComment
	{ $current=$iv_ruleXVariableNoComment.current; }
	EOF;

// Rule XVariableNoComment
ruleXVariableNoComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXVariableNoCommentAccess().getVariableAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getXVariableNoCommentAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXVariableNoCommentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleXVariableMLComment
entryRuleXVariableMLComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXVariableMLCommentRule()); }
	iv_ruleXVariableMLComment=ruleXVariableMLComment
	{ $current=$iv_ruleXVariableMLComment.current; }
	EOF;

// Rule XVariableMLComment
ruleXVariableMLComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXVariableMLCommentAccess().getVariableAction_0(),
					$current);
			}
		)
		(
			(
				lv_comment_1_0=RULE_ML_COMMENT
				{
					newLeafNode(lv_comment_1_0, grammarAccess.getXVariableMLCommentAccess().getCommentML_COMMENTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXVariableMLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"comment",
						lv_comment_1_0,
						"org.eclipse.xtext.common.Terminals.ML_COMMENT");
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getXVariableMLCommentAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXVariableMLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleXVariableSLComment
entryRuleXVariableSLComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXVariableSLCommentRule()); }
	iv_ruleXVariableSLComment=ruleXVariableSLComment
	{ $current=$iv_ruleXVariableSLComment.current; }
	EOF;

// Rule XVariableSLComment
ruleXVariableSLComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXVariableSLCommentAccess().getVariableAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getXVariableSLCommentAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXVariableSLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_comment_2_0=RULE_SL_COMMENT
				{
					newLeafNode(lv_comment_2_0, grammarAccess.getXVariableSLCommentAccess().getCommentSL_COMMENTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXVariableSLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"comment",
						lv_comment_2_0,
						"org.eclipse.xtext.common.Terminals.SL_COMMENT");
				}
			)
		)
	)
;

// Entry rule entryRuleXInvariant
entryRuleXInvariant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXInvariantRule()); }
	iv_ruleXInvariant=ruleXInvariant
	{ $current=$iv_ruleXInvariant.current; }
	EOF;

// Rule XInvariant
ruleXInvariant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXInvariantAccess().getXInvariantNoCommentParserRuleCall_0());
		}
		this_XInvariantNoComment_0=ruleXInvariantNoComment
		{
			$current = $this_XInvariantNoComment_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXInvariantAccess().getXInvariantMLCommentParserRuleCall_1());
		}
		this_XInvariantMLComment_1=ruleXInvariantMLComment
		{
			$current = $this_XInvariantMLComment_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXInvariantAccess().getXInvariantSLCommentParserRuleCall_2());
		}
		this_XInvariantSLComment_2=ruleXInvariantSLComment
		{
			$current = $this_XInvariantSLComment_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleXInvariantNoComment
entryRuleXInvariantNoComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXInvariantNoCommentRule()); }
	iv_ruleXInvariantNoComment=ruleXInvariantNoComment
	{ $current=$iv_ruleXInvariantNoComment.current; }
	EOF;

// Rule XInvariantNoComment
ruleXInvariantNoComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXInvariantNoCommentAccess().getInvariantAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_XLABEL
				{
					newLeafNode(lv_name_1_0, grammarAccess.getXInvariantNoCommentAccess().getNameXLABELTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXInvariantNoCommentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"ac.soton.eventb.xtext.machine.XMachine.XLABEL");
				}
			)
		)
		(
			(
				lv_predicate_2_0=RULE_STRING
				{
					newLeafNode(lv_predicate_2_0, grammarAccess.getXInvariantNoCommentAccess().getPredicateSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXInvariantNoCommentRule());
					}
					setWithLastConsumed(
						$current,
						"predicate",
						lv_predicate_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_theorem_3_0='theorem'
				{
					newLeafNode(lv_theorem_3_0, grammarAccess.getXInvariantNoCommentAccess().getTheoremTheoremKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXInvariantNoCommentRule());
					}
					setWithLastConsumed($current, "theorem", true, "theorem");
				}
			)
		)?
	)
;

// Entry rule entryRuleXInvariantMLComment
entryRuleXInvariantMLComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXInvariantMLCommentRule()); }
	iv_ruleXInvariantMLComment=ruleXInvariantMLComment
	{ $current=$iv_ruleXInvariantMLComment.current; }
	EOF;

// Rule XInvariantMLComment
ruleXInvariantMLComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXInvariantMLCommentAccess().getInvariantAction_0(),
					$current);
			}
		)
		(
			(
				lv_comment_1_0=RULE_ML_COMMENT
				{
					newLeafNode(lv_comment_1_0, grammarAccess.getXInvariantMLCommentAccess().getCommentML_COMMENTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXInvariantMLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"comment",
						lv_comment_1_0,
						"org.eclipse.xtext.common.Terminals.ML_COMMENT");
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_XLABEL
				{
					newLeafNode(lv_name_2_0, grammarAccess.getXInvariantMLCommentAccess().getNameXLABELTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXInvariantMLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"ac.soton.eventb.xtext.machine.XMachine.XLABEL");
				}
			)
		)
		(
			(
				lv_predicate_3_0=RULE_STRING
				{
					newLeafNode(lv_predicate_3_0, grammarAccess.getXInvariantMLCommentAccess().getPredicateSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXInvariantMLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"predicate",
						lv_predicate_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_theorem_4_0='theorem'
				{
					newLeafNode(lv_theorem_4_0, grammarAccess.getXInvariantMLCommentAccess().getTheoremTheoremKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXInvariantMLCommentRule());
					}
					setWithLastConsumed($current, "theorem", true, "theorem");
				}
			)
		)?
	)
;

// Entry rule entryRuleXInvariantSLComment
entryRuleXInvariantSLComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXInvariantSLCommentRule()); }
	iv_ruleXInvariantSLComment=ruleXInvariantSLComment
	{ $current=$iv_ruleXInvariantSLComment.current; }
	EOF;

// Rule XInvariantSLComment
ruleXInvariantSLComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXInvariantSLCommentAccess().getInvariantAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_XLABEL
				{
					newLeafNode(lv_name_1_0, grammarAccess.getXInvariantSLCommentAccess().getNameXLABELTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXInvariantSLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"ac.soton.eventb.xtext.machine.XMachine.XLABEL");
				}
			)
		)
		(
			(
				lv_predicate_2_0=RULE_STRING
				{
					newLeafNode(lv_predicate_2_0, grammarAccess.getXInvariantSLCommentAccess().getPredicateSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXInvariantSLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"predicate",
						lv_predicate_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_theorem_3_0='theorem'
				{
					newLeafNode(lv_theorem_3_0, grammarAccess.getXInvariantSLCommentAccess().getTheoremTheoremKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXInvariantSLCommentRule());
					}
					setWithLastConsumed($current, "theorem", true, "theorem");
				}
			)
		)?
		(
			(
				lv_comment_4_0=RULE_SL_COMMENT
				{
					newLeafNode(lv_comment_4_0, grammarAccess.getXInvariantSLCommentAccess().getCommentSL_COMMENTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXInvariantSLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"comment",
						lv_comment_4_0,
						"org.eclipse.xtext.common.Terminals.SL_COMMENT");
				}
			)
		)
	)
;

// Entry rule entryRuleXVariant
entryRuleXVariant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXVariantRule()); }
	iv_ruleXVariant=ruleXVariant
	{ $current=$iv_ruleXVariant.current; }
	EOF;

// Rule XVariant
ruleXVariant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXVariantAccess().getXVariantNoCommentParserRuleCall_0());
		}
		this_XVariantNoComment_0=ruleXVariantNoComment
		{
			$current = $this_XVariantNoComment_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXVariantAccess().getXVariantMLCommentParserRuleCall_1());
		}
		this_XVariantMLComment_1=ruleXVariantMLComment
		{
			$current = $this_XVariantMLComment_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXVariantAccess().getXVariantSLCommentParserRuleCall_2());
		}
		this_XVariantSLComment_2=ruleXVariantSLComment
		{
			$current = $this_XVariantSLComment_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleXVariantNoComment
entryRuleXVariantNoComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXVariantNoCommentRule()); }
	iv_ruleXVariantNoComment=ruleXVariantNoComment
	{ $current=$iv_ruleXVariantNoComment.current; }
	EOF;

// Rule XVariantNoComment
ruleXVariantNoComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXVariantNoCommentAccess().getVariantAction_0(),
					$current);
			}
		)
		(
			(
				lv_expression_1_0=RULE_STRING
				{
					newLeafNode(lv_expression_1_0, grammarAccess.getXVariantNoCommentAccess().getExpressionSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXVariantNoCommentRule());
					}
					setWithLastConsumed(
						$current,
						"expression",
						lv_expression_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleXVariantMLComment
entryRuleXVariantMLComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXVariantMLCommentRule()); }
	iv_ruleXVariantMLComment=ruleXVariantMLComment
	{ $current=$iv_ruleXVariantMLComment.current; }
	EOF;

// Rule XVariantMLComment
ruleXVariantMLComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXVariantMLCommentAccess().getVariantAction_0(),
					$current);
			}
		)
		(
			(
				lv_comment_1_0=RULE_ML_COMMENT
				{
					newLeafNode(lv_comment_1_0, grammarAccess.getXVariantMLCommentAccess().getCommentML_COMMENTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXVariantMLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"comment",
						lv_comment_1_0,
						"org.eclipse.xtext.common.Terminals.ML_COMMENT");
				}
			)
		)
		(
			(
				lv_expression_2_0=RULE_STRING
				{
					newLeafNode(lv_expression_2_0, grammarAccess.getXVariantMLCommentAccess().getExpressionSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXVariantMLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"expression",
						lv_expression_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleXVariantSLComment
entryRuleXVariantSLComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXVariantSLCommentRule()); }
	iv_ruleXVariantSLComment=ruleXVariantSLComment
	{ $current=$iv_ruleXVariantSLComment.current; }
	EOF;

// Rule XVariantSLComment
ruleXVariantSLComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXVariantSLCommentAccess().getVariantAction_0(),
					$current);
			}
		)
		(
			(
				lv_expression_1_0=RULE_STRING
				{
					newLeafNode(lv_expression_1_0, grammarAccess.getXVariantSLCommentAccess().getExpressionSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXVariantSLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"expression",
						lv_expression_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_comment_2_0=RULE_SL_COMMENT
				{
					newLeafNode(lv_comment_2_0, grammarAccess.getXVariantSLCommentAccess().getCommentSL_COMMENTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXVariantSLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"comment",
						lv_comment_2_0,
						"org.eclipse.xtext.common.Terminals.SL_COMMENT");
				}
			)
		)
	)
;

// Entry rule entryRuleXEvent
entryRuleXEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXEventRule()); }
	iv_ruleXEvent=ruleXEvent
	{ $current=$iv_ruleXEvent.current; }
	EOF;

// Rule XEvent
ruleXEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXEventAccess().getXEventNoCommentParserRuleCall_0());
		}
		this_XEventNoComment_0=ruleXEventNoComment
		{
			$current = $this_XEventNoComment_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXEventAccess().getXEventMLCommentParserRuleCall_1());
		}
		this_XEventMLComment_1=ruleXEventMLComment
		{
			$current = $this_XEventMLComment_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXEventAccess().getXEventSLCommentParserRuleCall_2());
		}
		this_XEventSLComment_2=ruleXEventSLComment
		{
			$current = $this_XEventSLComment_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleXEventNoComment
entryRuleXEventNoComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXEventNoCommentRule()); }
	iv_ruleXEventNoComment=ruleXEventNoComment
	{ $current=$iv_ruleXEventNoComment.current; }
	EOF;

// Rule XEventNoComment
ruleXEventNoComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXEventNoCommentAccess().getEventAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getXEventNoCommentAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXEventNoCommentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getXEventNoCommentAccess().getUnorderedGroup_2());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getXEventNoCommentAccess().getUnorderedGroup_2(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getXEventNoCommentAccess().getUnorderedGroup_2(), 0);
					}
								({true}?=>((
									lv_extended_3_0='extended'
									{
										newLeafNode(lv_extended_3_0, grammarAccess.getXEventNoCommentAccess().getExtendedExtendedKeyword_2_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getXEventNoCommentRule());
										}
										setWithLastConsumed($current, "extended", true, "extended");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getXEventNoCommentAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getXEventNoCommentAccess().getUnorderedGroup_2(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getXEventNoCommentAccess().getUnorderedGroup_2(), 1);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getXEventNoCommentAccess().getConvergenceXConvergenceEnumRuleCall_2_1_0());
									}
									lv_convergence_4_0=ruleXConvergence
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getXEventNoCommentRule());
										}
										set(
											$current,
											"convergence",
											lv_convergence_4_0,
											"ac.soton.eventb.xtext.machine.XMachine.XConvergence");
										afterParserOrEnumRuleCall();
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getXEventNoCommentAccess().getUnorderedGroup_2());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getXEventNoCommentAccess().getUnorderedGroup_2());
				}
		)
		(
			otherlv_5='synchronises'
			{
				newLeafNode(otherlv_5, grammarAccess.getXEventNoCommentAccess().getSynchronisesKeyword_3_0());
			}
			(
				{
					newCompositeNode(grammarAccess.getXEventNoCommentAccess().getXSynchronisedEventParserRuleCall_3_1());
				}
				ruleXSynchronisedEvent
				{
					afterParserOrEnumRuleCall();
				}
			)+
		)?
		(
			otherlv_7='refines'
			{
				newLeafNode(otherlv_7, grammarAccess.getXEventNoCommentAccess().getRefinesKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXEventNoCommentRule());
						}
					}
					otherlv_8=RULE_ID
					{
						newLeafNode(otherlv_8, grammarAccess.getXEventNoCommentAccess().getRefinesEventCrossReference_4_1_0());
					}
				)
			)+
		)?
		(
			(
				(
					otherlv_9='with'
					{
						newLeafNode(otherlv_9, grammarAccess.getXEventNoCommentAccess().getWithKeyword_5_0_0_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getXEventNoCommentAccess().getWitnessesXWitnessParserRuleCall_5_0_0_1_0());
							}
							lv_witnesses_10_0=ruleXWitness
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXEventNoCommentRule());
								}
								add(
									$current,
									"witnesses",
									lv_witnesses_10_0,
									"ac.soton.eventb.xtext.machine.XMachine.XWitness");
								afterParserOrEnumRuleCall();
							}
						)
					)+
				)?
				otherlv_11='begin'
				{
					newLeafNode(otherlv_11, grammarAccess.getXEventNoCommentAccess().getBeginKeyword_5_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXEventNoCommentAccess().getActionsXActionParserRuleCall_5_0_2_0());
						}
						lv_actions_12_0=ruleXAction
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXEventNoCommentRule());
							}
							add(
								$current,
								"actions",
								lv_actions_12_0,
								"ac.soton.eventb.xtext.machine.XMachine.XAction");
							afterParserOrEnumRuleCall();
						}
					)
				)+
			)
			    |
			(
				otherlv_13='when'
				{
					newLeafNode(otherlv_13, grammarAccess.getXEventNoCommentAccess().getWhenKeyword_5_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXEventNoCommentAccess().getGuardsXGuardParserRuleCall_5_1_1_0());
						}
						lv_guards_14_0=ruleXGuard
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXEventNoCommentRule());
							}
							add(
								$current,
								"guards",
								lv_guards_14_0,
								"ac.soton.eventb.xtext.machine.XMachine.XGuard");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				(
					otherlv_15='with'
					{
						newLeafNode(otherlv_15, grammarAccess.getXEventNoCommentAccess().getWithKeyword_5_1_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getXEventNoCommentAccess().getWitnessesXWitnessParserRuleCall_5_1_2_1_0());
							}
							lv_witnesses_16_0=ruleXWitness
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXEventNoCommentRule());
								}
								add(
									$current,
									"witnesses",
									lv_witnesses_16_0,
									"ac.soton.eventb.xtext.machine.XMachine.XWitness");
								afterParserOrEnumRuleCall();
							}
						)
					)+
				)?
				(
					otherlv_17='then'
					{
						newLeafNode(otherlv_17, grammarAccess.getXEventNoCommentAccess().getThenKeyword_5_1_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getXEventNoCommentAccess().getActionsXActionParserRuleCall_5_1_3_1_0());
							}
							lv_actions_18_0=ruleXAction
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXEventNoCommentRule());
								}
								add(
									$current,
									"actions",
									lv_actions_18_0,
									"ac.soton.eventb.xtext.machine.XMachine.XAction");
								afterParserOrEnumRuleCall();
							}
						)
					)+
				)?
			)
			    |
			(
				otherlv_19='any'
				{
					newLeafNode(otherlv_19, grammarAccess.getXEventNoCommentAccess().getAnyKeyword_5_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXEventNoCommentAccess().getParametersXParameterParserRuleCall_5_2_1_0());
						}
						lv_parameters_20_0=ruleXParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXEventNoCommentRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_20_0,
								"ac.soton.eventb.xtext.machine.XMachine.XParameter");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				otherlv_21='where'
				{
					newLeafNode(otherlv_21, grammarAccess.getXEventNoCommentAccess().getWhereKeyword_5_2_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXEventNoCommentAccess().getGuardsXGuardParserRuleCall_5_2_3_0());
						}
						lv_guards_22_0=ruleXGuard
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXEventNoCommentRule());
							}
							add(
								$current,
								"guards",
								lv_guards_22_0,
								"ac.soton.eventb.xtext.machine.XMachine.XGuard");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				(
					otherlv_23='with'
					{
						newLeafNode(otherlv_23, grammarAccess.getXEventNoCommentAccess().getWithKeyword_5_2_4_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getXEventNoCommentAccess().getWitnessesXWitnessParserRuleCall_5_2_4_1_0());
							}
							lv_witnesses_24_0=ruleXWitness
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXEventNoCommentRule());
								}
								add(
									$current,
									"witnesses",
									lv_witnesses_24_0,
									"ac.soton.eventb.xtext.machine.XMachine.XWitness");
								afterParserOrEnumRuleCall();
							}
						)
					)+
				)?
				(
					otherlv_25='then'
					{
						newLeafNode(otherlv_25, grammarAccess.getXEventNoCommentAccess().getThenKeyword_5_2_5_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getXEventNoCommentAccess().getActionsXActionParserRuleCall_5_2_5_1_0());
							}
							lv_actions_26_0=ruleXAction
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXEventNoCommentRule());
								}
								add(
									$current,
									"actions",
									lv_actions_26_0,
									"ac.soton.eventb.xtext.machine.XMachine.XAction");
								afterParserOrEnumRuleCall();
							}
						)
					)+
				)?
			)
		)?
		otherlv_27='end'
		{
			newLeafNode(otherlv_27, grammarAccess.getXEventNoCommentAccess().getEndKeyword_6());
		}
	)
;

// Entry rule entryRuleXEventMLComment
entryRuleXEventMLComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXEventMLCommentRule()); }
	iv_ruleXEventMLComment=ruleXEventMLComment
	{ $current=$iv_ruleXEventMLComment.current; }
	EOF;

// Rule XEventMLComment
ruleXEventMLComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXEventMLCommentAccess().getEventAction_0(),
					$current);
			}
		)
		(
			(
				lv_comment_1_0=RULE_ML_COMMENT
				{
					newLeafNode(lv_comment_1_0, grammarAccess.getXEventMLCommentAccess().getCommentML_COMMENTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXEventMLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"comment",
						lv_comment_1_0,
						"org.eclipse.xtext.common.Terminals.ML_COMMENT");
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getXEventMLCommentAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXEventMLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getXEventMLCommentAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getXEventMLCommentAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getXEventMLCommentAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>((
									lv_extended_4_0='extended'
									{
										newLeafNode(lv_extended_4_0, grammarAccess.getXEventMLCommentAccess().getExtendedExtendedKeyword_3_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getXEventMLCommentRule());
										}
										setWithLastConsumed($current, "extended", true, "extended");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getXEventMLCommentAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getXEventMLCommentAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getXEventMLCommentAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getXEventMLCommentAccess().getConvergenceXConvergenceEnumRuleCall_3_1_0());
									}
									lv_convergence_5_0=ruleXConvergence
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getXEventMLCommentRule());
										}
										set(
											$current,
											"convergence",
											lv_convergence_5_0,
											"ac.soton.eventb.xtext.machine.XMachine.XConvergence");
										afterParserOrEnumRuleCall();
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getXEventMLCommentAccess().getUnorderedGroup_3());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getXEventMLCommentAccess().getUnorderedGroup_3());
				}
		)
		(
			otherlv_6='synchronises'
			{
				newLeafNode(otherlv_6, grammarAccess.getXEventMLCommentAccess().getSynchronisesKeyword_4_0());
			}
			(
				{
					newCompositeNode(grammarAccess.getXEventMLCommentAccess().getXSynchronisedEventParserRuleCall_4_1());
				}
				ruleXSynchronisedEvent
				{
					afterParserOrEnumRuleCall();
				}
			)+
		)?
		(
			otherlv_8='refines'
			{
				newLeafNode(otherlv_8, grammarAccess.getXEventMLCommentAccess().getRefinesKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXEventMLCommentRule());
						}
					}
					otherlv_9=RULE_ID
					{
						newLeafNode(otherlv_9, grammarAccess.getXEventMLCommentAccess().getRefinesEventCrossReference_5_1_0());
					}
				)
			)+
		)?
		(
			(
				(
					otherlv_10='with'
					{
						newLeafNode(otherlv_10, grammarAccess.getXEventMLCommentAccess().getWithKeyword_6_0_0_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getXEventMLCommentAccess().getWitnessesXWitnessParserRuleCall_6_0_0_1_0());
							}
							lv_witnesses_11_0=ruleXWitness
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXEventMLCommentRule());
								}
								add(
									$current,
									"witnesses",
									lv_witnesses_11_0,
									"ac.soton.eventb.xtext.machine.XMachine.XWitness");
								afterParserOrEnumRuleCall();
							}
						)
					)+
				)?
				otherlv_12='begin'
				{
					newLeafNode(otherlv_12, grammarAccess.getXEventMLCommentAccess().getBeginKeyword_6_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXEventMLCommentAccess().getActionsXActionParserRuleCall_6_0_2_0());
						}
						lv_actions_13_0=ruleXAction
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXEventMLCommentRule());
							}
							add(
								$current,
								"actions",
								lv_actions_13_0,
								"ac.soton.eventb.xtext.machine.XMachine.XAction");
							afterParserOrEnumRuleCall();
						}
					)
				)+
			)
			    |
			(
				otherlv_14='when'
				{
					newLeafNode(otherlv_14, grammarAccess.getXEventMLCommentAccess().getWhenKeyword_6_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXEventMLCommentAccess().getGuardsXGuardParserRuleCall_6_1_1_0());
						}
						lv_guards_15_0=ruleXGuard
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXEventMLCommentRule());
							}
							add(
								$current,
								"guards",
								lv_guards_15_0,
								"ac.soton.eventb.xtext.machine.XMachine.XGuard");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				(
					otherlv_16='with'
					{
						newLeafNode(otherlv_16, grammarAccess.getXEventMLCommentAccess().getWithKeyword_6_1_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getXEventMLCommentAccess().getWitnessesXWitnessParserRuleCall_6_1_2_1_0());
							}
							lv_witnesses_17_0=ruleXWitness
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXEventMLCommentRule());
								}
								add(
									$current,
									"witnesses",
									lv_witnesses_17_0,
									"ac.soton.eventb.xtext.machine.XMachine.XWitness");
								afterParserOrEnumRuleCall();
							}
						)
					)+
				)?
				(
					otherlv_18='then'
					{
						newLeafNode(otherlv_18, grammarAccess.getXEventMLCommentAccess().getThenKeyword_6_1_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getXEventMLCommentAccess().getActionsXActionParserRuleCall_6_1_3_1_0());
							}
							lv_actions_19_0=ruleXAction
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXEventMLCommentRule());
								}
								add(
									$current,
									"actions",
									lv_actions_19_0,
									"ac.soton.eventb.xtext.machine.XMachine.XAction");
								afterParserOrEnumRuleCall();
							}
						)
					)+
				)?
			)
			    |
			(
				otherlv_20='any'
				{
					newLeafNode(otherlv_20, grammarAccess.getXEventMLCommentAccess().getAnyKeyword_6_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXEventMLCommentAccess().getParametersXParameterParserRuleCall_6_2_1_0());
						}
						lv_parameters_21_0=ruleXParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXEventMLCommentRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_21_0,
								"ac.soton.eventb.xtext.machine.XMachine.XParameter");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				otherlv_22='where'
				{
					newLeafNode(otherlv_22, grammarAccess.getXEventMLCommentAccess().getWhereKeyword_6_2_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXEventMLCommentAccess().getGuardsXGuardParserRuleCall_6_2_3_0());
						}
						lv_guards_23_0=ruleXGuard
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXEventMLCommentRule());
							}
							add(
								$current,
								"guards",
								lv_guards_23_0,
								"ac.soton.eventb.xtext.machine.XMachine.XGuard");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				(
					otherlv_24='with'
					{
						newLeafNode(otherlv_24, grammarAccess.getXEventMLCommentAccess().getWithKeyword_6_2_4_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getXEventMLCommentAccess().getWitnessesXWitnessParserRuleCall_6_2_4_1_0());
							}
							lv_witnesses_25_0=ruleXWitness
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXEventMLCommentRule());
								}
								add(
									$current,
									"witnesses",
									lv_witnesses_25_0,
									"ac.soton.eventb.xtext.machine.XMachine.XWitness");
								afterParserOrEnumRuleCall();
							}
						)
					)+
				)?
				(
					otherlv_26='then'
					{
						newLeafNode(otherlv_26, grammarAccess.getXEventMLCommentAccess().getThenKeyword_6_2_5_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getXEventMLCommentAccess().getActionsXActionParserRuleCall_6_2_5_1_0());
							}
							lv_actions_27_0=ruleXAction
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXEventMLCommentRule());
								}
								add(
									$current,
									"actions",
									lv_actions_27_0,
									"ac.soton.eventb.xtext.machine.XMachine.XAction");
								afterParserOrEnumRuleCall();
							}
						)
					)+
				)?
			)
		)?
		otherlv_28='end'
		{
			newLeafNode(otherlv_28, grammarAccess.getXEventMLCommentAccess().getEndKeyword_7());
		}
	)
;

// Entry rule entryRuleXEventSLComment
entryRuleXEventSLComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXEventSLCommentRule()); }
	iv_ruleXEventSLComment=ruleXEventSLComment
	{ $current=$iv_ruleXEventSLComment.current; }
	EOF;

// Rule XEventSLComment
ruleXEventSLComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXEventSLCommentAccess().getEventAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getXEventSLCommentAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXEventSLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getXEventSLCommentAccess().getUnorderedGroup_2());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getXEventSLCommentAccess().getUnorderedGroup_2(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getXEventSLCommentAccess().getUnorderedGroup_2(), 0);
					}
								({true}?=>((
									lv_extended_3_0='extended'
									{
										newLeafNode(lv_extended_3_0, grammarAccess.getXEventSLCommentAccess().getExtendedExtendedKeyword_2_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getXEventSLCommentRule());
										}
										setWithLastConsumed($current, "extended", true, "extended");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getXEventSLCommentAccess().getUnorderedGroup_2());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getXEventSLCommentAccess().getUnorderedGroup_2(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getXEventSLCommentAccess().getUnorderedGroup_2(), 1);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getXEventSLCommentAccess().getConvergenceXConvergenceEnumRuleCall_2_1_0());
									}
									lv_convergence_4_0=ruleXConvergence
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getXEventSLCommentRule());
										}
										set(
											$current,
											"convergence",
											lv_convergence_4_0,
											"ac.soton.eventb.xtext.machine.XMachine.XConvergence");
										afterParserOrEnumRuleCall();
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getXEventSLCommentAccess().getUnorderedGroup_2());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getXEventSLCommentAccess().getUnorderedGroup_2());
				}
		)
		(
			(
				lv_comment_5_0=RULE_SL_COMMENT
				{
					newLeafNode(lv_comment_5_0, grammarAccess.getXEventSLCommentAccess().getCommentSL_COMMENTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXEventSLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"comment",
						lv_comment_5_0,
						"org.eclipse.xtext.common.Terminals.SL_COMMENT");
				}
			)
		)
		(
			otherlv_6='synchronises'
			{
				newLeafNode(otherlv_6, grammarAccess.getXEventSLCommentAccess().getSynchronisesKeyword_4_0());
			}
			(
				{
					newCompositeNode(grammarAccess.getXEventSLCommentAccess().getXSynchronisedEventParserRuleCall_4_1());
				}
				ruleXSynchronisedEvent
				{
					afterParserOrEnumRuleCall();
				}
			)+
		)?
		(
			otherlv_8='refines'
			{
				newLeafNode(otherlv_8, grammarAccess.getXEventSLCommentAccess().getRefinesKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXEventSLCommentRule());
						}
					}
					otherlv_9=RULE_ID
					{
						newLeafNode(otherlv_9, grammarAccess.getXEventSLCommentAccess().getRefinesEventCrossReference_5_1_0());
					}
				)
			)+
		)?
		(
			(
				(
					otherlv_10='with'
					{
						newLeafNode(otherlv_10, grammarAccess.getXEventSLCommentAccess().getWithKeyword_6_0_0_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getXEventSLCommentAccess().getWitnessesXWitnessParserRuleCall_6_0_0_1_0());
							}
							lv_witnesses_11_0=ruleXWitness
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXEventSLCommentRule());
								}
								add(
									$current,
									"witnesses",
									lv_witnesses_11_0,
									"ac.soton.eventb.xtext.machine.XMachine.XWitness");
								afterParserOrEnumRuleCall();
							}
						)
					)+
				)?
				otherlv_12='begin'
				{
					newLeafNode(otherlv_12, grammarAccess.getXEventSLCommentAccess().getBeginKeyword_6_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXEventSLCommentAccess().getActionsXActionParserRuleCall_6_0_2_0());
						}
						lv_actions_13_0=ruleXAction
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXEventSLCommentRule());
							}
							add(
								$current,
								"actions",
								lv_actions_13_0,
								"ac.soton.eventb.xtext.machine.XMachine.XAction");
							afterParserOrEnumRuleCall();
						}
					)
				)+
			)
			    |
			(
				otherlv_14='when'
				{
					newLeafNode(otherlv_14, grammarAccess.getXEventSLCommentAccess().getWhenKeyword_6_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXEventSLCommentAccess().getGuardsXGuardParserRuleCall_6_1_1_0());
						}
						lv_guards_15_0=ruleXGuard
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXEventSLCommentRule());
							}
							add(
								$current,
								"guards",
								lv_guards_15_0,
								"ac.soton.eventb.xtext.machine.XMachine.XGuard");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				(
					otherlv_16='with'
					{
						newLeafNode(otherlv_16, grammarAccess.getXEventSLCommentAccess().getWithKeyword_6_1_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getXEventSLCommentAccess().getWitnessesXWitnessParserRuleCall_6_1_2_1_0());
							}
							lv_witnesses_17_0=ruleXWitness
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXEventSLCommentRule());
								}
								add(
									$current,
									"witnesses",
									lv_witnesses_17_0,
									"ac.soton.eventb.xtext.machine.XMachine.XWitness");
								afterParserOrEnumRuleCall();
							}
						)
					)+
				)?
				(
					otherlv_18='then'
					{
						newLeafNode(otherlv_18, grammarAccess.getXEventSLCommentAccess().getThenKeyword_6_1_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getXEventSLCommentAccess().getActionsXActionParserRuleCall_6_1_3_1_0());
							}
							lv_actions_19_0=ruleXAction
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXEventSLCommentRule());
								}
								add(
									$current,
									"actions",
									lv_actions_19_0,
									"ac.soton.eventb.xtext.machine.XMachine.XAction");
								afterParserOrEnumRuleCall();
							}
						)
					)+
				)?
			)
			    |
			(
				otherlv_20='any'
				{
					newLeafNode(otherlv_20, grammarAccess.getXEventSLCommentAccess().getAnyKeyword_6_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXEventSLCommentAccess().getParametersXParameterParserRuleCall_6_2_1_0());
						}
						lv_parameters_21_0=ruleXParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXEventSLCommentRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_21_0,
								"ac.soton.eventb.xtext.machine.XMachine.XParameter");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				otherlv_22='where'
				{
					newLeafNode(otherlv_22, grammarAccess.getXEventSLCommentAccess().getWhereKeyword_6_2_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXEventSLCommentAccess().getGuardsXGuardParserRuleCall_6_2_3_0());
						}
						lv_guards_23_0=ruleXGuard
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXEventSLCommentRule());
							}
							add(
								$current,
								"guards",
								lv_guards_23_0,
								"ac.soton.eventb.xtext.machine.XMachine.XGuard");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				(
					otherlv_24='with'
					{
						newLeafNode(otherlv_24, grammarAccess.getXEventSLCommentAccess().getWithKeyword_6_2_4_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getXEventSLCommentAccess().getWitnessesXWitnessParserRuleCall_6_2_4_1_0());
							}
							lv_witnesses_25_0=ruleXWitness
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXEventSLCommentRule());
								}
								add(
									$current,
									"witnesses",
									lv_witnesses_25_0,
									"ac.soton.eventb.xtext.machine.XMachine.XWitness");
								afterParserOrEnumRuleCall();
							}
						)
					)+
				)?
				(
					otherlv_26='then'
					{
						newLeafNode(otherlv_26, grammarAccess.getXEventSLCommentAccess().getThenKeyword_6_2_5_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getXEventSLCommentAccess().getActionsXActionParserRuleCall_6_2_5_1_0());
							}
							lv_actions_27_0=ruleXAction
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXEventSLCommentRule());
								}
								add(
									$current,
									"actions",
									lv_actions_27_0,
									"ac.soton.eventb.xtext.machine.XMachine.XAction");
								afterParserOrEnumRuleCall();
							}
						)
					)+
				)?
			)
		)?
		otherlv_28='end'
		{
			newLeafNode(otherlv_28, grammarAccess.getXEventSLCommentAccess().getEndKeyword_7());
		}
	)
;

// Entry rule entryRuleXSynchronisedEvent
entryRuleXSynchronisedEvent returns [String current=null]:
	{ newCompositeNode(grammarAccess.getXSynchronisedEventRule()); }
	iv_ruleXSynchronisedEvent=ruleXSynchronisedEvent
	{ $current=$iv_ruleXSynchronisedEvent.current.getText(); }
	EOF;

// Rule XSynchronisedEvent
ruleXSynchronisedEvent returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getXSynchronisedEventAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getXSynchronisedEventAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getXSynchronisedEventAccess().getIDTerminalRuleCall_1_1());
			}
		)?
	)
;

// Entry rule entryRuleXParameter
entryRuleXParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXParameterRule()); }
	iv_ruleXParameter=ruleXParameter
	{ $current=$iv_ruleXParameter.current; }
	EOF;

// Rule XParameter
ruleXParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXParameterAccess().getXParameterNoCommentParserRuleCall_0());
		}
		this_XParameterNoComment_0=ruleXParameterNoComment
		{
			$current = $this_XParameterNoComment_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXParameterAccess().getXParameterMLCommentParserRuleCall_1());
		}
		this_XParameterMLComment_1=ruleXParameterMLComment
		{
			$current = $this_XParameterMLComment_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXParameterAccess().getXParameterSLCommentParserRuleCall_2());
		}
		this_XParameterSLComment_2=ruleXParameterSLComment
		{
			$current = $this_XParameterSLComment_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleXParameterNoComment
entryRuleXParameterNoComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXParameterNoCommentRule()); }
	iv_ruleXParameterNoComment=ruleXParameterNoComment
	{ $current=$iv_ruleXParameterNoComment.current; }
	EOF;

// Rule XParameterNoComment
ruleXParameterNoComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXParameterNoCommentAccess().getParameterAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getXParameterNoCommentAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXParameterNoCommentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleXParameterMLComment
entryRuleXParameterMLComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXParameterMLCommentRule()); }
	iv_ruleXParameterMLComment=ruleXParameterMLComment
	{ $current=$iv_ruleXParameterMLComment.current; }
	EOF;

// Rule XParameterMLComment
ruleXParameterMLComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXParameterMLCommentAccess().getParameterAction_0(),
					$current);
			}
		)
		(
			(
				lv_comment_1_0=RULE_ML_COMMENT
				{
					newLeafNode(lv_comment_1_0, grammarAccess.getXParameterMLCommentAccess().getCommentML_COMMENTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXParameterMLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"comment",
						lv_comment_1_0,
						"org.eclipse.xtext.common.Terminals.ML_COMMENT");
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getXParameterMLCommentAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXParameterMLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleXParameterSLComment
entryRuleXParameterSLComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXParameterSLCommentRule()); }
	iv_ruleXParameterSLComment=ruleXParameterSLComment
	{ $current=$iv_ruleXParameterSLComment.current; }
	EOF;

// Rule XParameterSLComment
ruleXParameterSLComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXParameterSLCommentAccess().getParameterAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getXParameterSLCommentAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXParameterSLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_comment_2_0=RULE_SL_COMMENT
				{
					newLeafNode(lv_comment_2_0, grammarAccess.getXParameterSLCommentAccess().getCommentSL_COMMENTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXParameterSLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"comment",
						lv_comment_2_0,
						"org.eclipse.xtext.common.Terminals.SL_COMMENT");
				}
			)
		)
	)
;

// Entry rule entryRuleXGuard
entryRuleXGuard returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXGuardRule()); }
	iv_ruleXGuard=ruleXGuard
	{ $current=$iv_ruleXGuard.current; }
	EOF;

// Rule XGuard
ruleXGuard returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXGuardAccess().getXGuardNoCommentParserRuleCall_0());
		}
		this_XGuardNoComment_0=ruleXGuardNoComment
		{
			$current = $this_XGuardNoComment_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXGuardAccess().getXGuardMLCommentParserRuleCall_1());
		}
		this_XGuardMLComment_1=ruleXGuardMLComment
		{
			$current = $this_XGuardMLComment_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXGuardAccess().getXGuardSLCommentParserRuleCall_2());
		}
		this_XGuardSLComment_2=ruleXGuardSLComment
		{
			$current = $this_XGuardSLComment_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleXGuardNoComment
entryRuleXGuardNoComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXGuardNoCommentRule()); }
	iv_ruleXGuardNoComment=ruleXGuardNoComment
	{ $current=$iv_ruleXGuardNoComment.current; }
	EOF;

// Rule XGuardNoComment
ruleXGuardNoComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXGuardNoCommentAccess().getGuardAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_XLABEL
				{
					newLeafNode(lv_name_1_0, grammarAccess.getXGuardNoCommentAccess().getNameXLABELTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXGuardNoCommentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"ac.soton.eventb.xtext.machine.XMachine.XLABEL");
				}
			)
		)
		(
			(
				lv_predicate_2_0=RULE_STRING
				{
					newLeafNode(lv_predicate_2_0, grammarAccess.getXGuardNoCommentAccess().getPredicateSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXGuardNoCommentRule());
					}
					setWithLastConsumed(
						$current,
						"predicate",
						lv_predicate_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_theorem_3_0='theorem'
				{
					newLeafNode(lv_theorem_3_0, grammarAccess.getXGuardNoCommentAccess().getTheoremTheoremKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXGuardNoCommentRule());
					}
					setWithLastConsumed($current, "theorem", true, "theorem");
				}
			)
		)?
	)
;

// Entry rule entryRuleXGuardMLComment
entryRuleXGuardMLComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXGuardMLCommentRule()); }
	iv_ruleXGuardMLComment=ruleXGuardMLComment
	{ $current=$iv_ruleXGuardMLComment.current; }
	EOF;

// Rule XGuardMLComment
ruleXGuardMLComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXGuardMLCommentAccess().getGuardAction_0(),
					$current);
			}
		)
		(
			(
				lv_comment_1_0=RULE_ML_COMMENT
				{
					newLeafNode(lv_comment_1_0, grammarAccess.getXGuardMLCommentAccess().getCommentML_COMMENTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXGuardMLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"comment",
						lv_comment_1_0,
						"org.eclipse.xtext.common.Terminals.ML_COMMENT");
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_XLABEL
				{
					newLeafNode(lv_name_2_0, grammarAccess.getXGuardMLCommentAccess().getNameXLABELTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXGuardMLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"ac.soton.eventb.xtext.machine.XMachine.XLABEL");
				}
			)
		)
		(
			(
				lv_predicate_3_0=RULE_STRING
				{
					newLeafNode(lv_predicate_3_0, grammarAccess.getXGuardMLCommentAccess().getPredicateSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXGuardMLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"predicate",
						lv_predicate_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_theorem_4_0='theorem'
				{
					newLeafNode(lv_theorem_4_0, grammarAccess.getXGuardMLCommentAccess().getTheoremTheoremKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXGuardMLCommentRule());
					}
					setWithLastConsumed($current, "theorem", true, "theorem");
				}
			)
		)?
	)
;

// Entry rule entryRuleXGuardSLComment
entryRuleXGuardSLComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXGuardSLCommentRule()); }
	iv_ruleXGuardSLComment=ruleXGuardSLComment
	{ $current=$iv_ruleXGuardSLComment.current; }
	EOF;

// Rule XGuardSLComment
ruleXGuardSLComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXGuardSLCommentAccess().getGuardAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_XLABEL
				{
					newLeafNode(lv_name_1_0, grammarAccess.getXGuardSLCommentAccess().getNameXLABELTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXGuardSLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"ac.soton.eventb.xtext.machine.XMachine.XLABEL");
				}
			)
		)
		(
			(
				lv_predicate_2_0=RULE_STRING
				{
					newLeafNode(lv_predicate_2_0, grammarAccess.getXGuardSLCommentAccess().getPredicateSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXGuardSLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"predicate",
						lv_predicate_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_theorem_3_0='theorem'
				{
					newLeafNode(lv_theorem_3_0, grammarAccess.getXGuardSLCommentAccess().getTheoremTheoremKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXGuardSLCommentRule());
					}
					setWithLastConsumed($current, "theorem", true, "theorem");
				}
			)
		)?
		(
			(
				lv_comment_4_0=RULE_SL_COMMENT
				{
					newLeafNode(lv_comment_4_0, grammarAccess.getXGuardSLCommentAccess().getCommentSL_COMMENTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXGuardSLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"comment",
						lv_comment_4_0,
						"org.eclipse.xtext.common.Terminals.SL_COMMENT");
				}
			)
		)
	)
;

// Entry rule entryRuleXWitness
entryRuleXWitness returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXWitnessRule()); }
	iv_ruleXWitness=ruleXWitness
	{ $current=$iv_ruleXWitness.current; }
	EOF;

// Rule XWitness
ruleXWitness returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXWitnessAccess().getXWitnessNoCommentParserRuleCall_0());
		}
		this_XWitnessNoComment_0=ruleXWitnessNoComment
		{
			$current = $this_XWitnessNoComment_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXWitnessAccess().getXWitnessMLCommentParserRuleCall_1());
		}
		this_XWitnessMLComment_1=ruleXWitnessMLComment
		{
			$current = $this_XWitnessMLComment_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXWitnessAccess().getXWitnessSLCommentParserRuleCall_2());
		}
		this_XWitnessSLComment_2=ruleXWitnessSLComment
		{
			$current = $this_XWitnessSLComment_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleXWitnessNoComment
entryRuleXWitnessNoComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXWitnessNoCommentRule()); }
	iv_ruleXWitnessNoComment=ruleXWitnessNoComment
	{ $current=$iv_ruleXWitnessNoComment.current; }
	EOF;

// Rule XWitnessNoComment
ruleXWitnessNoComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXWitnessNoCommentAccess().getWitnessAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_XLABEL
				{
					newLeafNode(lv_name_1_0, grammarAccess.getXWitnessNoCommentAccess().getNameXLABELTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXWitnessNoCommentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"ac.soton.eventb.xtext.machine.XMachine.XLABEL");
				}
			)
		)
		(
			(
				lv_predicate_2_0=RULE_STRING
				{
					newLeafNode(lv_predicate_2_0, grammarAccess.getXWitnessNoCommentAccess().getPredicateSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXWitnessNoCommentRule());
					}
					setWithLastConsumed(
						$current,
						"predicate",
						lv_predicate_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleXWitnessMLComment
entryRuleXWitnessMLComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXWitnessMLCommentRule()); }
	iv_ruleXWitnessMLComment=ruleXWitnessMLComment
	{ $current=$iv_ruleXWitnessMLComment.current; }
	EOF;

// Rule XWitnessMLComment
ruleXWitnessMLComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXWitnessMLCommentAccess().getWitnessAction_0(),
					$current);
			}
		)
		(
			(
				lv_comment_1_0=RULE_ML_COMMENT
				{
					newLeafNode(lv_comment_1_0, grammarAccess.getXWitnessMLCommentAccess().getCommentML_COMMENTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXWitnessMLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"comment",
						lv_comment_1_0,
						"org.eclipse.xtext.common.Terminals.ML_COMMENT");
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_XLABEL
				{
					newLeafNode(lv_name_2_0, grammarAccess.getXWitnessMLCommentAccess().getNameXLABELTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXWitnessMLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"ac.soton.eventb.xtext.machine.XMachine.XLABEL");
				}
			)
		)
		(
			(
				lv_predicate_3_0=RULE_STRING
				{
					newLeafNode(lv_predicate_3_0, grammarAccess.getXWitnessMLCommentAccess().getPredicateSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXWitnessMLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"predicate",
						lv_predicate_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleXWitnessSLComment
entryRuleXWitnessSLComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXWitnessSLCommentRule()); }
	iv_ruleXWitnessSLComment=ruleXWitnessSLComment
	{ $current=$iv_ruleXWitnessSLComment.current; }
	EOF;

// Rule XWitnessSLComment
ruleXWitnessSLComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXWitnessSLCommentAccess().getWitnessAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_XLABEL
				{
					newLeafNode(lv_name_1_0, grammarAccess.getXWitnessSLCommentAccess().getNameXLABELTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXWitnessSLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"ac.soton.eventb.xtext.machine.XMachine.XLABEL");
				}
			)
		)
		(
			(
				lv_predicate_2_0=RULE_STRING
				{
					newLeafNode(lv_predicate_2_0, grammarAccess.getXWitnessSLCommentAccess().getPredicateSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXWitnessSLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"predicate",
						lv_predicate_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_comment_3_0=RULE_SL_COMMENT
				{
					newLeafNode(lv_comment_3_0, grammarAccess.getXWitnessSLCommentAccess().getCommentSL_COMMENTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXWitnessSLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"comment",
						lv_comment_3_0,
						"org.eclipse.xtext.common.Terminals.SL_COMMENT");
				}
			)
		)
	)
;

// Entry rule entryRuleXAction
entryRuleXAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXActionRule()); }
	iv_ruleXAction=ruleXAction
	{ $current=$iv_ruleXAction.current; }
	EOF;

// Rule XAction
ruleXAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXActionAccess().getXActionNoCommentParserRuleCall_0());
		}
		this_XActionNoComment_0=ruleXActionNoComment
		{
			$current = $this_XActionNoComment_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXActionAccess().getXActionMLCommentParserRuleCall_1());
		}
		this_XActionMLComment_1=ruleXActionMLComment
		{
			$current = $this_XActionMLComment_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXActionAccess().getXActionSLCommentParserRuleCall_2());
		}
		this_XActionSLComment_2=ruleXActionSLComment
		{
			$current = $this_XActionSLComment_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleXActionNoComment
entryRuleXActionNoComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXActionNoCommentRule()); }
	iv_ruleXActionNoComment=ruleXActionNoComment
	{ $current=$iv_ruleXActionNoComment.current; }
	EOF;

// Rule XActionNoComment
ruleXActionNoComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXActionNoCommentAccess().getActionAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_XLABEL
				{
					newLeafNode(lv_name_1_0, grammarAccess.getXActionNoCommentAccess().getNameXLABELTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXActionNoCommentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"ac.soton.eventb.xtext.machine.XMachine.XLABEL");
				}
			)
		)
		(
			(
				lv_action_2_0=RULE_STRING
				{
					newLeafNode(lv_action_2_0, grammarAccess.getXActionNoCommentAccess().getActionSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXActionNoCommentRule());
					}
					setWithLastConsumed(
						$current,
						"action",
						lv_action_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleXActionMLComment
entryRuleXActionMLComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXActionMLCommentRule()); }
	iv_ruleXActionMLComment=ruleXActionMLComment
	{ $current=$iv_ruleXActionMLComment.current; }
	EOF;

// Rule XActionMLComment
ruleXActionMLComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXActionMLCommentAccess().getActionAction_0(),
					$current);
			}
		)
		(
			(
				lv_comment_1_0=RULE_ML_COMMENT
				{
					newLeafNode(lv_comment_1_0, grammarAccess.getXActionMLCommentAccess().getCommentML_COMMENTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXActionMLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"comment",
						lv_comment_1_0,
						"org.eclipse.xtext.common.Terminals.ML_COMMENT");
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_XLABEL
				{
					newLeafNode(lv_name_2_0, grammarAccess.getXActionMLCommentAccess().getNameXLABELTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXActionMLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"ac.soton.eventb.xtext.machine.XMachine.XLABEL");
				}
			)
		)
		(
			(
				lv_action_3_0=RULE_STRING
				{
					newLeafNode(lv_action_3_0, grammarAccess.getXActionMLCommentAccess().getActionSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXActionMLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"action",
						lv_action_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleXActionSLComment
entryRuleXActionSLComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXActionSLCommentRule()); }
	iv_ruleXActionSLComment=ruleXActionSLComment
	{ $current=$iv_ruleXActionSLComment.current; }
	EOF;

// Rule XActionSLComment
ruleXActionSLComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXActionSLCommentAccess().getActionAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_XLABEL
				{
					newLeafNode(lv_name_1_0, grammarAccess.getXActionSLCommentAccess().getNameXLABELTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXActionSLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"ac.soton.eventb.xtext.machine.XMachine.XLABEL");
				}
			)
		)
		(
			(
				lv_action_2_0=RULE_STRING
				{
					newLeafNode(lv_action_2_0, grammarAccess.getXActionSLCommentAccess().getActionSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXActionSLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"action",
						lv_action_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_comment_3_0=RULE_SL_COMMENT
				{
					newLeafNode(lv_comment_3_0, grammarAccess.getXActionSLCommentAccess().getCommentSL_COMMENTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXActionSLCommentRule());
					}
					setWithLastConsumed(
						$current,
						"comment",
						lv_comment_3_0,
						"org.eclipse.xtext.common.Terminals.SL_COMMENT");
				}
			)
		)
	)
;

// Rule XConvergence
ruleXConvergence returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='ordinary'
			{
				$current = grammarAccess.getXConvergenceAccess().getOrdinaryEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getXConvergenceAccess().getOrdinaryEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='convergent'
			{
				$current = grammarAccess.getXConvergenceAccess().getConvergentEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getXConvergenceAccess().getConvergentEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='anticipated'
			{
				$current = grammarAccess.getXConvergenceAccess().getAnticipatedEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getXConvergenceAccess().getAnticipatedEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_XLABEL : '@' ~(':')+ ':';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
