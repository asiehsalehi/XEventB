/*
 * generated by Xtext 2.10.0
 */
grammar InternalXMachine;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package ac.soton.eventb.xtext.machine.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package ac.soton.eventb.xtext.machine.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import ac.soton.eventb.xtext.machine.services.XMachineGrammarAccess;

}

@parser::members {

 	private XMachineGrammarAccess grammarAccess;

    public InternalXMachineParser(TokenStream input, XMachineGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "XMachine";
   	}

   	@Override
   	protected XMachineGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleXMachine
entryRuleXMachine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXMachineRule()); }
	iv_ruleXMachine=ruleXMachine
	{ $current=$iv_ruleXMachine.current; }
	EOF;

// Rule XMachine
ruleXMachine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXMachineAccess().getMachineAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_comment_1_1=RULE_ML_COMMENT
					{
						newLeafNode(lv_comment_1_1, grammarAccess.getXMachineAccess().getCommentML_COMMENTTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXMachineRule());
						}
						setWithLastConsumed(
							$current,
							"comment",
							lv_comment_1_1,
							"org.eclipse.xtext.common.Terminals.ML_COMMENT");
					}
					    |
					lv_comment_1_2=RULE_SL_COMMENT
					{
						newLeafNode(lv_comment_1_2, grammarAccess.getXMachineAccess().getCommentSL_COMMENTTerminalRuleCall_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXMachineRule());
						}
						setWithLastConsumed(
							$current,
							"comment",
							lv_comment_1_2,
							"org.eclipse.xtext.common.Terminals.SL_COMMENT");
					}
				)
			)
		)?
		otherlv_2='machine'
		{
			newLeafNode(otherlv_2, grammarAccess.getXMachineAccess().getMachineKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getXMachineAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXMachineRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_4='refines'
			{
				newLeafNode(otherlv_4, grammarAccess.getXMachineAccess().getRefinesKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXMachineRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getXMachineAccess().getRefinesMachineCrossReference_4_1_0());
					}
				)
			)
		)?
		(
			otherlv_6='sees'
			{
				newLeafNode(otherlv_6, grammarAccess.getXMachineAccess().getSeesKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXMachineRule());
						}
					}
					otherlv_7=RULE_ID
					{
						newLeafNode(otherlv_7, grammarAccess.getXMachineAccess().getSeesContextCrossReference_5_1_0());
					}
				)
			)+
		)?
		(
			otherlv_8='variables'
			{
				newLeafNode(otherlv_8, grammarAccess.getXMachineAccess().getVariablesKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getXMachineAccess().getVariablesXVariableParserRuleCall_6_1_0());
					}
					lv_variables_9_0=ruleXVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXMachineRule());
						}
						add(
							$current,
							"variables",
							lv_variables_9_0,
							"ac.soton.eventb.xtext.machine.XMachine.XVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		(
			otherlv_10='invariants'
			{
				newLeafNode(otherlv_10, grammarAccess.getXMachineAccess().getInvariantsKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getXMachineAccess().getInvariantsXInvariantParserRuleCall_7_1_0());
					}
					lv_invariants_11_0=ruleXInvariant
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXMachineRule());
						}
						add(
							$current,
							"invariants",
							lv_invariants_11_0,
							"ac.soton.eventb.xtext.machine.XMachine.XInvariant");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		(
			otherlv_12='variant'
			{
				newLeafNode(otherlv_12, grammarAccess.getXMachineAccess().getVariantKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getXMachineAccess().getVariantXVariantParserRuleCall_8_1_0());
					}
					lv_variant_13_0=ruleXVariant
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXMachineRule());
						}
						set(
							$current,
							"variant",
							lv_variant_13_0,
							"ac.soton.eventb.xtext.machine.XMachine.XVariant");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_14='events'
			{
				newLeafNode(otherlv_14, grammarAccess.getXMachineAccess().getEventsKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getXMachineAccess().getEventsXEventParserRuleCall_9_1_0());
					}
					lv_events_15_0=ruleXEvent
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXMachineRule());
						}
						add(
							$current,
							"events",
							lv_events_15_0,
							"ac.soton.eventb.xtext.machine.XMachine.XEvent");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_16=';'
				{
					newLeafNode(otherlv_16, grammarAccess.getXMachineAccess().getSemicolonKeyword_9_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXMachineAccess().getEventsXEventParserRuleCall_9_2_1_0());
						}
						lv_events_17_0=ruleXEvent
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXMachineRule());
							}
							add(
								$current,
								"events",
								lv_events_17_0,
								"ac.soton.eventb.xtext.machine.XMachine.XEvent");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_18='end'
		{
			newLeafNode(otherlv_18, grammarAccess.getXMachineAccess().getEndKeyword_10());
		}
	)
;

// Entry rule entryRuleXVariable
entryRuleXVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXVariableRule()); }
	iv_ruleXVariable=ruleXVariable
	{ $current=$iv_ruleXVariable.current; }
	EOF;

// Rule XVariable
ruleXVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXVariableAccess().getVariableAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_comment_1_1=RULE_ML_COMMENT
					{
						newLeafNode(lv_comment_1_1, grammarAccess.getXVariableAccess().getCommentML_COMMENTTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXVariableRule());
						}
						setWithLastConsumed(
							$current,
							"comment",
							lv_comment_1_1,
							"org.eclipse.xtext.common.Terminals.ML_COMMENT");
					}
					    |
					lv_comment_1_2=RULE_SL_COMMENT
					{
						newLeafNode(lv_comment_1_2, grammarAccess.getXVariableAccess().getCommentSL_COMMENTTerminalRuleCall_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXVariableRule());
						}
						setWithLastConsumed(
							$current,
							"comment",
							lv_comment_1_2,
							"org.eclipse.xtext.common.Terminals.SL_COMMENT");
					}
				)
			)
		)?
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getXVariableAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleXInvariant
entryRuleXInvariant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXInvariantRule()); }
	iv_ruleXInvariant=ruleXInvariant
	{ $current=$iv_ruleXInvariant.current; }
	EOF;

// Rule XInvariant
ruleXInvariant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXInvariantAccess().getInvariantAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_comment_1_1=RULE_ML_COMMENT
					{
						newLeafNode(lv_comment_1_1, grammarAccess.getXInvariantAccess().getCommentML_COMMENTTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXInvariantRule());
						}
						setWithLastConsumed(
							$current,
							"comment",
							lv_comment_1_1,
							"org.eclipse.xtext.common.Terminals.ML_COMMENT");
					}
					    |
					lv_comment_1_2=RULE_SL_COMMENT
					{
						newLeafNode(lv_comment_1_2, grammarAccess.getXInvariantAccess().getCommentSL_COMMENTTerminalRuleCall_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXInvariantRule());
						}
						setWithLastConsumed(
							$current,
							"comment",
							lv_comment_1_2,
							"org.eclipse.xtext.common.Terminals.SL_COMMENT");
					}
				)
			)
		)?
		(
			(
				lv_name_2_0=RULE_XLABEL
				{
					newLeafNode(lv_name_2_0, grammarAccess.getXInvariantAccess().getNameXLABELTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXInvariantRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"ac.soton.eventb.xtext.machine.XMachine.XLABEL");
				}
			)
		)
		(
			(
				lv_predicate_3_0=RULE_STRING
				{
					newLeafNode(lv_predicate_3_0, grammarAccess.getXInvariantAccess().getPredicateSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXInvariantRule());
					}
					setWithLastConsumed(
						$current,
						"predicate",
						lv_predicate_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_theorem_4_0='theorem'
				{
					newLeafNode(lv_theorem_4_0, grammarAccess.getXInvariantAccess().getTheoremTheoremKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXInvariantRule());
					}
					setWithLastConsumed($current, "theorem", true, "theorem");
				}
			)
		)?
	)
;

// Entry rule entryRuleXVariant
entryRuleXVariant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXVariantRule()); }
	iv_ruleXVariant=ruleXVariant
	{ $current=$iv_ruleXVariant.current; }
	EOF;

// Rule XVariant
ruleXVariant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXVariantAccess().getVariantAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_comment_1_1=RULE_ML_COMMENT
					{
						newLeafNode(lv_comment_1_1, grammarAccess.getXVariantAccess().getCommentML_COMMENTTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXVariantRule());
						}
						setWithLastConsumed(
							$current,
							"comment",
							lv_comment_1_1,
							"org.eclipse.xtext.common.Terminals.ML_COMMENT");
					}
					    |
					lv_comment_1_2=RULE_SL_COMMENT
					{
						newLeafNode(lv_comment_1_2, grammarAccess.getXVariantAccess().getCommentSL_COMMENTTerminalRuleCall_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXVariantRule());
						}
						setWithLastConsumed(
							$current,
							"comment",
							lv_comment_1_2,
							"org.eclipse.xtext.common.Terminals.SL_COMMENT");
					}
				)
			)
		)?
		(
			(
				lv_expression_2_0=RULE_STRING
				{
					newLeafNode(lv_expression_2_0, grammarAccess.getXVariantAccess().getExpressionSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXVariantRule());
					}
					setWithLastConsumed(
						$current,
						"expression",
						lv_expression_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleXEvent
entryRuleXEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXEventRule()); }
	iv_ruleXEvent=ruleXEvent
	{ $current=$iv_ruleXEvent.current; }
	EOF;

// Rule XEvent
ruleXEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXEventAccess().getEventAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_comment_1_1=RULE_ML_COMMENT
					{
						newLeafNode(lv_comment_1_1, grammarAccess.getXEventAccess().getCommentML_COMMENTTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXEventRule());
						}
						setWithLastConsumed(
							$current,
							"comment",
							lv_comment_1_1,
							"org.eclipse.xtext.common.Terminals.ML_COMMENT");
					}
					    |
					lv_comment_1_2=RULE_SL_COMMENT
					{
						newLeafNode(lv_comment_1_2, grammarAccess.getXEventAccess().getCommentSL_COMMENTTerminalRuleCall_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXEventRule());
						}
						setWithLastConsumed(
							$current,
							"comment",
							lv_comment_1_2,
							"org.eclipse.xtext.common.Terminals.SL_COMMENT");
					}
				)
			)
		)?
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getXEventAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXEventRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getXEventAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getXEventAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getXEventAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>((
									lv_extended_4_0='extended'
									{
										newLeafNode(lv_extended_4_0, grammarAccess.getXEventAccess().getExtendedExtendedKeyword_3_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getXEventRule());
										}
										setWithLastConsumed($current, "extended", true, "extended");
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getXEventAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getXEventAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getXEventAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getXEventAccess().getConvergenceXConvergenceEnumRuleCall_3_1_0());
									}
									lv_convergence_5_0=ruleXConvergence
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getXEventRule());
										}
										set(
											$current,
											"convergence",
											lv_convergence_5_0,
											"ac.soton.eventb.xtext.machine.XMachine.XConvergence");
										afterParserOrEnumRuleCall();
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getXEventAccess().getUnorderedGroup_3());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getXEventAccess().getUnorderedGroup_3());
				}
		)
		(
			otherlv_6='refines'
			{
				newLeafNode(otherlv_6, grammarAccess.getXEventAccess().getRefinesKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXEventRule());
						}
					}
					otherlv_7=RULE_ID
					{
						newLeafNode(otherlv_7, grammarAccess.getXEventAccess().getRefinesEventCrossReference_4_1_0());
					}
				)
			)+
		)?
		(
			(
				(
					otherlv_8='with'
					{
						newLeafNode(otherlv_8, grammarAccess.getXEventAccess().getWithKeyword_5_0_0_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getXEventAccess().getWitnessesXWitnessParserRuleCall_5_0_0_1_0());
							}
							lv_witnesses_9_0=ruleXWitness
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXEventRule());
								}
								add(
									$current,
									"witnesses",
									lv_witnesses_9_0,
									"ac.soton.eventb.xtext.machine.XMachine.XWitness");
								afterParserOrEnumRuleCall();
							}
						)
					)+
				)?
				otherlv_10='begin'
				{
					newLeafNode(otherlv_10, grammarAccess.getXEventAccess().getBeginKeyword_5_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXEventAccess().getActionsXActionParserRuleCall_5_0_2_0());
						}
						lv_actions_11_0=ruleXAction
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXEventRule());
							}
							add(
								$current,
								"actions",
								lv_actions_11_0,
								"ac.soton.eventb.xtext.machine.XMachine.XAction");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				otherlv_12='end'
				{
					newLeafNode(otherlv_12, grammarAccess.getXEventAccess().getEndKeyword_5_0_3());
				}
			)
			    |
			(
				otherlv_13='when'
				{
					newLeafNode(otherlv_13, grammarAccess.getXEventAccess().getWhenKeyword_5_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXEventAccess().getGuardsXGuardParserRuleCall_5_1_1_0());
						}
						lv_guards_14_0=ruleXGuard
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXEventRule());
							}
							add(
								$current,
								"guards",
								lv_guards_14_0,
								"ac.soton.eventb.xtext.machine.XMachine.XGuard");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				(
					otherlv_15='with'
					{
						newLeafNode(otherlv_15, grammarAccess.getXEventAccess().getWithKeyword_5_1_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getXEventAccess().getWitnessesXWitnessParserRuleCall_5_1_2_1_0());
							}
							lv_witnesses_16_0=ruleXWitness
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXEventRule());
								}
								add(
									$current,
									"witnesses",
									lv_witnesses_16_0,
									"ac.soton.eventb.xtext.machine.XMachine.XWitness");
								afterParserOrEnumRuleCall();
							}
						)
					)+
				)?
				(
					otherlv_17='then'
					{
						newLeafNode(otherlv_17, grammarAccess.getXEventAccess().getThenKeyword_5_1_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getXEventAccess().getActionsXActionParserRuleCall_5_1_3_1_0());
							}
							lv_actions_18_0=ruleXAction
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXEventRule());
								}
								add(
									$current,
									"actions",
									lv_actions_18_0,
									"ac.soton.eventb.xtext.machine.XMachine.XAction");
								afterParserOrEnumRuleCall();
							}
						)
					)+
				)?
				otherlv_19='end'
				{
					newLeafNode(otherlv_19, grammarAccess.getXEventAccess().getEndKeyword_5_1_4());
				}
			)
			    |
			(
				otherlv_20='any'
				{
					newLeafNode(otherlv_20, grammarAccess.getXEventAccess().getAnyKeyword_5_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXEventAccess().getParametersXParameterParserRuleCall_5_2_1_0());
						}
						lv_parameters_21_0=ruleXParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXEventRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_21_0,
								"ac.soton.eventb.xtext.machine.XMachine.XParameter");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				otherlv_22='where'
				{
					newLeafNode(otherlv_22, grammarAccess.getXEventAccess().getWhereKeyword_5_2_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getXEventAccess().getGuardsXGuardParserRuleCall_5_2_3_0());
						}
						lv_guards_23_0=ruleXGuard
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getXEventRule());
							}
							add(
								$current,
								"guards",
								lv_guards_23_0,
								"ac.soton.eventb.xtext.machine.XMachine.XGuard");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				(
					otherlv_24='with'
					{
						newLeafNode(otherlv_24, grammarAccess.getXEventAccess().getWithKeyword_5_2_4_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getXEventAccess().getWitnessesXWitnessParserRuleCall_5_2_4_1_0());
							}
							lv_witnesses_25_0=ruleXWitness
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXEventRule());
								}
								add(
									$current,
									"witnesses",
									lv_witnesses_25_0,
									"ac.soton.eventb.xtext.machine.XMachine.XWitness");
								afterParserOrEnumRuleCall();
							}
						)
					)+
				)?
				(
					otherlv_26='then'
					{
						newLeafNode(otherlv_26, grammarAccess.getXEventAccess().getThenKeyword_5_2_5_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getXEventAccess().getActionsXActionParserRuleCall_5_2_5_1_0());
							}
							lv_actions_27_0=ruleXAction
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getXEventRule());
								}
								add(
									$current,
									"actions",
									lv_actions_27_0,
									"ac.soton.eventb.xtext.machine.XMachine.XAction");
								afterParserOrEnumRuleCall();
							}
						)
					)+
				)?
				otherlv_28='end'
				{
					newLeafNode(otherlv_28, grammarAccess.getXEventAccess().getEndKeyword_5_2_6());
				}
			)
		)?
	)
;

// Entry rule entryRuleXParameter
entryRuleXParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXParameterRule()); }
	iv_ruleXParameter=ruleXParameter
	{ $current=$iv_ruleXParameter.current; }
	EOF;

// Rule XParameter
ruleXParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXParameterAccess().getParameterAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_comment_1_1=RULE_ML_COMMENT
					{
						newLeafNode(lv_comment_1_1, grammarAccess.getXParameterAccess().getCommentML_COMMENTTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXParameterRule());
						}
						setWithLastConsumed(
							$current,
							"comment",
							lv_comment_1_1,
							"org.eclipse.xtext.common.Terminals.ML_COMMENT");
					}
					    |
					lv_comment_1_2=RULE_SL_COMMENT
					{
						newLeafNode(lv_comment_1_2, grammarAccess.getXParameterAccess().getCommentSL_COMMENTTerminalRuleCall_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXParameterRule());
						}
						setWithLastConsumed(
							$current,
							"comment",
							lv_comment_1_2,
							"org.eclipse.xtext.common.Terminals.SL_COMMENT");
					}
				)
			)
		)?
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getXParameterAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleXGuard
entryRuleXGuard returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXGuardRule()); }
	iv_ruleXGuard=ruleXGuard
	{ $current=$iv_ruleXGuard.current; }
	EOF;

// Rule XGuard
ruleXGuard returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXGuardAccess().getGuardAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_comment_1_1=RULE_ML_COMMENT
					{
						newLeafNode(lv_comment_1_1, grammarAccess.getXGuardAccess().getCommentML_COMMENTTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXGuardRule());
						}
						setWithLastConsumed(
							$current,
							"comment",
							lv_comment_1_1,
							"org.eclipse.xtext.common.Terminals.ML_COMMENT");
					}
					    |
					lv_comment_1_2=RULE_SL_COMMENT
					{
						newLeafNode(lv_comment_1_2, grammarAccess.getXGuardAccess().getCommentSL_COMMENTTerminalRuleCall_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXGuardRule());
						}
						setWithLastConsumed(
							$current,
							"comment",
							lv_comment_1_2,
							"org.eclipse.xtext.common.Terminals.SL_COMMENT");
					}
				)
			)
		)?
		(
			(
				lv_name_2_0=RULE_XLABEL
				{
					newLeafNode(lv_name_2_0, grammarAccess.getXGuardAccess().getNameXLABELTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXGuardRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"ac.soton.eventb.xtext.machine.XMachine.XLABEL");
				}
			)
		)
		(
			(
				lv_predicate_3_0=RULE_STRING
				{
					newLeafNode(lv_predicate_3_0, grammarAccess.getXGuardAccess().getPredicateSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXGuardRule());
					}
					setWithLastConsumed(
						$current,
						"predicate",
						lv_predicate_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_theorem_4_0='theorem'
				{
					newLeafNode(lv_theorem_4_0, grammarAccess.getXGuardAccess().getTheoremTheoremKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXGuardRule());
					}
					setWithLastConsumed($current, "theorem", true, "theorem");
				}
			)
		)?
	)
;

// Entry rule entryRuleXWitness
entryRuleXWitness returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXWitnessRule()); }
	iv_ruleXWitness=ruleXWitness
	{ $current=$iv_ruleXWitness.current; }
	EOF;

// Rule XWitness
ruleXWitness returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXWitnessAccess().getWitnessAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_comment_1_1=RULE_ML_COMMENT
					{
						newLeafNode(lv_comment_1_1, grammarAccess.getXWitnessAccess().getCommentML_COMMENTTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXWitnessRule());
						}
						setWithLastConsumed(
							$current,
							"comment",
							lv_comment_1_1,
							"org.eclipse.xtext.common.Terminals.ML_COMMENT");
					}
					    |
					lv_comment_1_2=RULE_SL_COMMENT
					{
						newLeafNode(lv_comment_1_2, grammarAccess.getXWitnessAccess().getCommentSL_COMMENTTerminalRuleCall_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXWitnessRule());
						}
						setWithLastConsumed(
							$current,
							"comment",
							lv_comment_1_2,
							"org.eclipse.xtext.common.Terminals.SL_COMMENT");
					}
				)
			)
		)?
		(
			(
				lv_name_2_0=RULE_XLABEL
				{
					newLeafNode(lv_name_2_0, grammarAccess.getXWitnessAccess().getNameXLABELTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXWitnessRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"ac.soton.eventb.xtext.machine.XMachine.XLABEL");
				}
			)
		)
		(
			(
				lv_predicate_3_0=RULE_STRING
				{
					newLeafNode(lv_predicate_3_0, grammarAccess.getXWitnessAccess().getPredicateSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXWitnessRule());
					}
					setWithLastConsumed(
						$current,
						"predicate",
						lv_predicate_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleXAction
entryRuleXAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXActionRule()); }
	iv_ruleXAction=ruleXAction
	{ $current=$iv_ruleXAction.current; }
	EOF;

// Rule XAction
ruleXAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXActionAccess().getActionAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_comment_1_1=RULE_ML_COMMENT
					{
						newLeafNode(lv_comment_1_1, grammarAccess.getXActionAccess().getCommentML_COMMENTTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXActionRule());
						}
						setWithLastConsumed(
							$current,
							"comment",
							lv_comment_1_1,
							"org.eclipse.xtext.common.Terminals.ML_COMMENT");
					}
					    |
					lv_comment_1_2=RULE_SL_COMMENT
					{
						newLeafNode(lv_comment_1_2, grammarAccess.getXActionAccess().getCommentSL_COMMENTTerminalRuleCall_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXActionRule());
						}
						setWithLastConsumed(
							$current,
							"comment",
							lv_comment_1_2,
							"org.eclipse.xtext.common.Terminals.SL_COMMENT");
					}
				)
			)
		)?
		(
			(
				lv_name_2_0=RULE_XLABEL
				{
					newLeafNode(lv_name_2_0, grammarAccess.getXActionAccess().getNameXLABELTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXActionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"ac.soton.eventb.xtext.machine.XMachine.XLABEL");
				}
			)
		)
		(
			(
				lv_action_3_0=RULE_STRING
				{
					newLeafNode(lv_action_3_0, grammarAccess.getXActionAccess().getActionSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXActionRule());
					}
					setWithLastConsumed(
						$current,
						"action",
						lv_action_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Rule XConvergence
ruleXConvergence returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='ordinary'
			{
				$current = grammarAccess.getXConvergenceAccess().getOrdinaryEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getXConvergenceAccess().getOrdinaryEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='convergent'
			{
				$current = grammarAccess.getXConvergenceAccess().getConvergentEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getXConvergenceAccess().getConvergentEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='anticipated'
			{
				$current = grammarAccess.getXConvergenceAccess().getAnticipatedEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getXConvergenceAccess().getAnticipatedEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_XLABEL : '@' ~(':')+ ':';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
