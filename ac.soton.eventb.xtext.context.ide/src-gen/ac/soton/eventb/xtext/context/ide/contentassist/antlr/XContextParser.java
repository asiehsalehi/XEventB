/*
 * generated by Xtext 2.10.0
 */
package ac.soton.eventb.xtext.context.ide.contentassist.antlr;

import ac.soton.eventb.xtext.context.ide.contentassist.antlr.internal.InternalXContextParser;
import ac.soton.eventb.xtext.context.services.XContextGrammarAccess;
import com.google.inject.Inject;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

public class XContextParser extends AbstractContentAssistParser {

	@Inject
	private XContextGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalXContextParser createParser() {
		InternalXContextParser result = new InternalXContextParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getXContextAccess().getCommentAlternatives_1_0(), "rule__XContext__CommentAlternatives_1_0");
					put(grammarAccess.getXCarrierSetAccess().getAlternatives(), "rule__XCarrierSet__Alternatives");
					put(grammarAccess.getXConstantAccess().getAlternatives(), "rule__XConstant__Alternatives");
					put(grammarAccess.getXAxiomAccess().getAlternatives(), "rule__XAxiom__Alternatives");
					put(grammarAccess.getXContextAccess().getGroup(), "rule__XContext__Group__0");
					put(grammarAccess.getXContextAccess().getGroup_4(), "rule__XContext__Group_4__0");
					put(grammarAccess.getXContextAccess().getGroup_5(), "rule__XContext__Group_5__0");
					put(grammarAccess.getXContextAccess().getGroup_6(), "rule__XContext__Group_6__0");
					put(grammarAccess.getXContextAccess().getGroup_7(), "rule__XContext__Group_7__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getXCarrierSetNoCommentAccess().getGroup(), "rule__XCarrierSetNoComment__Group__0");
					put(grammarAccess.getXCarrierSetMLCommentAccess().getGroup(), "rule__XCarrierSetMLComment__Group__0");
					put(grammarAccess.getXCarrierSetSLCommentAccess().getGroup(), "rule__XCarrierSetSLComment__Group__0");
					put(grammarAccess.getXConstantNoCommentAccess().getGroup(), "rule__XConstantNoComment__Group__0");
					put(grammarAccess.getXConstantMLCommentAccess().getGroup(), "rule__XConstantMLComment__Group__0");
					put(grammarAccess.getXConstantSLCommentAccess().getGroup(), "rule__XConstantSLComment__Group__0");
					put(grammarAccess.getXAxiomNoCommentAccess().getGroup(), "rule__XAxiomNoComment__Group__0");
					put(grammarAccess.getXAxiomMLCommentAccess().getGroup(), "rule__XAxiomMLComment__Group__0");
					put(grammarAccess.getXAxiomSLCommentAccess().getGroup(), "rule__XAxiomSLComment__Group__0");
					put(grammarAccess.getXContextAccess().getCommentAssignment_1(), "rule__XContext__CommentAssignment_1");
					put(grammarAccess.getXContextAccess().getNameAssignment_3(), "rule__XContext__NameAssignment_3");
					put(grammarAccess.getXContextAccess().getExtendsAssignment_4_1(), "rule__XContext__ExtendsAssignment_4_1");
					put(grammarAccess.getXContextAccess().getSetsAssignment_5_1(), "rule__XContext__SetsAssignment_5_1");
					put(grammarAccess.getXContextAccess().getConstantsAssignment_6_1(), "rule__XContext__ConstantsAssignment_6_1");
					put(grammarAccess.getXContextAccess().getAxiomsAssignment_7_1(), "rule__XContext__AxiomsAssignment_7_1");
					put(grammarAccess.getXCarrierSetNoCommentAccess().getNameAssignment_1(), "rule__XCarrierSetNoComment__NameAssignment_1");
					put(grammarAccess.getXCarrierSetMLCommentAccess().getCommentAssignment_1(), "rule__XCarrierSetMLComment__CommentAssignment_1");
					put(grammarAccess.getXCarrierSetMLCommentAccess().getNameAssignment_2(), "rule__XCarrierSetMLComment__NameAssignment_2");
					put(grammarAccess.getXCarrierSetSLCommentAccess().getNameAssignment_1(), "rule__XCarrierSetSLComment__NameAssignment_1");
					put(grammarAccess.getXCarrierSetSLCommentAccess().getCommentAssignment_2(), "rule__XCarrierSetSLComment__CommentAssignment_2");
					put(grammarAccess.getXConstantNoCommentAccess().getNameAssignment_1(), "rule__XConstantNoComment__NameAssignment_1");
					put(grammarAccess.getXConstantMLCommentAccess().getCommentAssignment_1(), "rule__XConstantMLComment__CommentAssignment_1");
					put(grammarAccess.getXConstantMLCommentAccess().getNameAssignment_2(), "rule__XConstantMLComment__NameAssignment_2");
					put(grammarAccess.getXConstantSLCommentAccess().getNameAssignment_1(), "rule__XConstantSLComment__NameAssignment_1");
					put(grammarAccess.getXConstantSLCommentAccess().getCommentAssignment_2(), "rule__XConstantSLComment__CommentAssignment_2");
					put(grammarAccess.getXAxiomNoCommentAccess().getNameAssignment_1(), "rule__XAxiomNoComment__NameAssignment_1");
					put(grammarAccess.getXAxiomNoCommentAccess().getPredicateAssignment_2(), "rule__XAxiomNoComment__PredicateAssignment_2");
					put(grammarAccess.getXAxiomNoCommentAccess().getTheoremAssignment_3(), "rule__XAxiomNoComment__TheoremAssignment_3");
					put(grammarAccess.getXAxiomMLCommentAccess().getCommentAssignment_1(), "rule__XAxiomMLComment__CommentAssignment_1");
					put(grammarAccess.getXAxiomMLCommentAccess().getNameAssignment_2(), "rule__XAxiomMLComment__NameAssignment_2");
					put(grammarAccess.getXAxiomMLCommentAccess().getPredicateAssignment_3(), "rule__XAxiomMLComment__PredicateAssignment_3");
					put(grammarAccess.getXAxiomMLCommentAccess().getTheoremAssignment_4(), "rule__XAxiomMLComment__TheoremAssignment_4");
					put(grammarAccess.getXAxiomSLCommentAccess().getNameAssignment_1(), "rule__XAxiomSLComment__NameAssignment_1");
					put(grammarAccess.getXAxiomSLCommentAccess().getPredicateAssignment_2(), "rule__XAxiomSLComment__PredicateAssignment_2");
					put(grammarAccess.getXAxiomSLCommentAccess().getTheoremAssignment_3(), "rule__XAxiomSLComment__TheoremAssignment_3");
					put(grammarAccess.getXAxiomSLCommentAccess().getCommentAssignment_4(), "rule__XAxiomSLComment__CommentAssignment_4");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalXContextParser typedParser = (InternalXContextParser) parser;
			typedParser.entryRuleXContext();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS" };
	}

	public XContextGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(XContextGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
